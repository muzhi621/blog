<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liwu&#39;s blog</title>
  
  <subtitle>Simple Notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://myliwu.work/"/>
  <updated>2019-03-18T11:54:55.432Z</updated>
  <id>https://myliwu.work/</id>
  
  <author>
    <name>muzhi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Typora: 所见即所得Markdown编辑器</title>
    <link href="https://myliwu.work/post/aebc66f3.html"/>
    <id>https://myliwu.work/post/aebc66f3.html</id>
    <published>2019-03-18T11:53:19.000Z</published>
    <updated>2019-03-18T11:54:55.432Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Typora下载"><a href="#Typora下载" class="headerlink" title="Typora下载"></a><a href="https://www.typora.io/" target="_blank" rel="noopener">Typora下载</a></h3><h3 id="Typora个人主题GitHub修改版"><a href="#Typora个人主题GitHub修改版" class="headerlink" title="Typora个人主题GitHub修改版"></a><a href="http://yun.myliwu.work/Blog/%E6%96%87%E4%BB%B6/GitHub%E4%B8%AA%E4%BA%BA%E4%BF%AE%E6%94%B9%E7%89%88.rar" target="_blank" rel="noopener">Typora个人主题GitHub修改版</a></h3><p><strong>Markdown语法已经在前篇中引出</strong></p><h4 id="所见即所得"><a href="#所见即所得" class="headerlink" title="所见即所得"></a>所见即所得</h4><p>Typora的设计理念就是极致简洁，简洁到什么程度呢？把其他编辑器的预览窗口都省了，而且同时还支持实时预览。打开一个新文件时：</p><h4 id="便捷的表格、代码、公式编辑"><a href="#便捷的表格、代码、公式编辑" class="headerlink" title="便捷的表格、代码、公式编辑"></a>便捷的表格、代码、公式编辑</h4><p>之所以把这三个放一块是因为他们都是区块元素，而且它们都可以使用快捷键插入。插入表格的快捷键是<code>command + T</code>  最上面可以选择行列数、没一列的对齐方式，并且支持在表格中使用<code>tab</code>键跳到下一单元格。</p><p>插入代码的语法和其他markdown并没有区别，同样支持行内代码和行间代码块，语法是相同的，只是在插入行间代码时可以选择快捷键<code>command + alt + c</code>和输入<code>`</code>后按回车两种方式，效果是一样的:</p><p>右下角可以输入代码的语言，可以根据不同的语言自动高亮显示。</p><p>Typora支持Latex的公式编辑，公式编辑几乎和代码编辑的使用方法相同，同样分行内公式和行间公式，行内公式用两个<code>$</code>包裹起来，行间公式可以使用快捷键<code>command + alt + b</code>和<code>$$ + enter</code>插入</p><p>光标所在位置输入Latex的数学公式的语法，在Preview窗口会有实时预览效果，便于调整。</p><hr><h4 id="图片拖拽"><a href="#图片拖拽" class="headerlink" title="图片拖拽"></a>图片拖拽</h4><p>这个功能和简书的拖入图片即可插入图片功能是一样的，但是这个功能默认是关闭的需要在设置中手动开启，设置的路径</p><h4 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h4><p>官网上有，第三方修改也有</p><h4 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h4><p>Typora的导出选项提供了很多选项，在横线以上的三个是默认支持导出的，这个导出没啥问题；横线以下的需要安装<code>Pandoc</code>来支持</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Typora下载&quot;&gt;&lt;a href=&quot;#Typora下载&quot; class=&quot;headerlink&quot; title=&quot;Typora下载&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.typora.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener
      
    
    </summary>
    
      <category term="教程" scheme="https://myliwu.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://myliwu.work/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Markdown" scheme="https://myliwu.work/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://myliwu.work/post/3c50d03d.html"/>
    <id>https://myliwu.work/post/3c50d03d.html</id>
    <published>2019-03-18T11:42:37.000Z</published>
    <updated>2019-03-18T11:54:19.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown-语法说明-简体中文版"><a href="#Markdown-语法说明-简体中文版" class="headerlink" title="Markdown 语法说明 (简体中文版)"></a>Markdown 语法说明 (简体中文版)</h1><ul><li><ul><li><a href="https://www.appinn.com/markdown/#philosophy" target="_blank" rel="noopener">宗旨</a></li><li><a href="https://www.appinn.com/markdown/#html" target="_blank" rel="noopener">兼容 HTML</a></li><li><a href="https://www.appinn.com/markdown/#autoescape" target="_blank" rel="noopener">特殊字符自动转换</a></li></ul></li><li>区块元素<ul><li><a href="https://www.appinn.com/markdown/#p" target="_blank" rel="noopener">段落和换行</a></li><li><a href="https://www.appinn.com/markdown/#header" target="_blank" rel="noopener">标题</a></li><li><a href="https://www.appinn.com/markdown/#blockquote" target="_blank" rel="noopener">区块引用</a></li><li><a href="https://www.appinn.com/markdown/#list" target="_blank" rel="noopener">列表</a></li><li><a href="https://www.appinn.com/markdown/#precode" target="_blank" rel="noopener">代码区块</a></li><li><a href="https://www.appinn.com/markdown/#hr" target="_blank" rel="noopener">分隔线</a></li></ul></li><li>区段元素<ul><li><a href="https://www.appinn.com/markdown/#link" target="_blank" rel="noopener">链接</a></li><li><a href="https://www.appinn.com/markdown/#em" target="_blank" rel="noopener">强调</a></li><li><a href="https://www.appinn.com/markdown/#code" target="_blank" rel="noopener">代码</a></li><li><a href="https://www.appinn.com/markdown/#img" target="_blank" rel="noopener">图片</a></li></ul></li><li>其它<ul><li><a href="https://www.appinn.com/markdown/#backslash" target="_blank" rel="noopener">反斜杠</a></li><li><a href="https://www.appinn.com/markdown/#autolink" target="_blank" rel="noopener">自动链接</a></li></ul></li><li><a href="https://www.appinn.com/markdown/#acknowledgement" target="_blank" rel="noopener">感谢</a></li></ul><hr><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>Markdown 的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>、<a href="http://textism.com/tools/textile/" target="_blank" rel="noopener">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="noopener">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="noopener">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="noopener">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em>强调</em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h3><p>Markdown 语法的目标是：成为一种适用于网络的<em>书写</em>语言。</p><p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想<em>不是</em>要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种<em>发布</em>的格式，Markdown 是一种<em>书写</em>的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p&gt;</code> 标签。</p><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落。</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Foo&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">这是另一个普通段落。</span><br></pre></td></tr></table></figure><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p><p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p><h3 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p><p><code>&amp;</code> 字符尤其让网络文档编写者受折磨，如果你要打「<code>AT&amp;T</code>」 ，你必须要写成「<code>AT&amp;amp;T</code>」。而网址中的 <code>&amp;</code> 字符也要转换。比如你要链接到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>你必须要把网址转换写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>才能放到链接标签的 <code>href</code> 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 <code>&amp;</code> 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;amp</code>;。</p><p>所以你如果要在文档中插入一个版权符号 <code>©</code>，你可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;copy;</span><br></pre></td></tr></table></figure><p>Markdown 会保留它不动。而若你写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;T</span><br></pre></td></tr></table></figure><p>Markdown 就会将它转为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;amp;T</span><br></pre></td></tr></table></figure><p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 允许 <a href="https://www.appinn.com/markdown/#html" target="_blank" rel="noopener">兼容 HTML</a> ，如果你是把 <code>&lt;</code> 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &lt; 5</span><br></pre></td></tr></table></figure><p>Markdown 将会把它转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &amp;lt; 5</span><br></pre></td></tr></table></figure><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt;</code> 和 <code>&amp;</code> 两个符号都<em>一定</em>会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><hr><h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code>&lt;br /&gt;</code> 标签。</p><p>如果你<em>确实</em>想要依赖 Markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生 <code>&lt;br /&gt;</code> ，但是简单地「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 <a href="https://www.appinn.com/markdown/#blockquote" target="_blank" rel="noopener">区块引用</a> 和多段落的 <a href="https://www.appinn.com/markdown/#list" target="_blank" rel="noopener">列表</a> 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a> 和类 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a> 形式。</p><p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">This is an H2</span><br><span class="line">-------------</span><br></pre></td></tr></table></figure><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是 H1</span><br><span class="line"></span><br><span class="line">## 这是 H2</span><br><span class="line"></span><br><span class="line">###### 这是 H6</span><br></pre></td></tr></table></figure><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是 H1 #</span><br><span class="line"></span><br><span class="line">## 这是 H2 ##</span><br><span class="line"></span><br><span class="line">### 这是 H3 ######</span><br></pre></td></tr></table></figure><h3 id="区块引用-Blockquotes"><a href="#区块引用-Blockquotes" class="headerlink" title="区块引用 Blockquotes"></a>区块引用 Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt;</code> 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">&gt; id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"></span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is the first level of quoting.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; This is nested blockquote.</span><br><span class="line">&gt;</span><br><span class="line">&gt; Back to the first level.</span><br></pre></td></tr></table></figure><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; ## 这是一个标题。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 1.   这是第一行列表项。</span><br><span class="line">&gt; 2.   这是第二行列表项。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt; </span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Red</span><br><span class="line">*   Green</span><br><span class="line">*   Blue</span><br></pre></td></tr></table></figure><p>等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+   Red</span><br><span class="line">+   Green</span><br><span class="line">+   Blue</span><br></pre></td></tr></table></figure><p>也等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-   Red</span><br><span class="line">-   Green</span><br><span class="line">-   Blue</span><br></pre></td></tr></table></figure><p>有序列表则使用数字接着一个英文句点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.  Bird</span><br><span class="line">2.  McHale</span><br><span class="line">3.  Parish</span><br></pre></td></tr></table></figure><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;McHale&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Parish&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><p>如果你的列表标记写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.  Bird</span><br><span class="line">1.  McHale</span><br><span class="line">1.  Parish</span><br></pre></td></tr></table></figure><p>或甚至是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3. Bird</span><br><span class="line">1. McHale</span><br><span class="line">8. Parish</span><br></pre></td></tr></table></figure><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>但是如果你懒，那也行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <code>&lt;p&gt;</code> 标签包起来，举例来说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Magic&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>但是这个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line"></span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.  This is a list item with two paragraphs. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line"></span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla in, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line">2.  Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line"></span><br><span class="line">    This is the second paragraph in the list item. You&apos;re</span><br><span class="line">only required to indent the first line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line"></span><br><span class="line">*   Another item in the same list.</span><br></pre></td></tr></table></figure><p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*   A list item with a blockquote:</span><br><span class="line"></span><br><span class="line">    &gt; This is a blockquote</span><br><span class="line">    &gt; inside a list item.</span><br></pre></td></tr></table></figure><p>如果要放代码区块的话，该区块就需要缩进<em>两次</em>，也就是 8 个空格或是 2 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   一列表项包含一个列表区块：</span><br><span class="line"></span><br><span class="line">        &lt;代码写在这&gt;</span><br></pre></td></tr></table></figure><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986. What a great season.</span><br></pre></td></tr></table></figure><p>换句话说，也就是在行首出现<em>数字-句点-空白</em>，要避免这样的状况，你可以在句点前面加上反斜杠。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。</p><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落：</span><br><span class="line"></span><br><span class="line">    这是一个代码区块。</span><br></pre></td></tr></table></figure><p>Markdown 会转换成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;这是一个普通段落：&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;这是一个代码区块。</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Here is an example of AppleScript:</span><br><span class="line"></span><br><span class="line">    tell application &quot;Foo&quot;</span><br><span class="line">        beep</span><br><span class="line">    end tell</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">    &amp;copy; 2004 Foo Corporation</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;</span><br><span class="line">    &amp;amp;copy; 2004 Foo Corporation</span><br><span class="line">&amp;lt;/div&amp;gt;</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><hr><h2 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种形式的链接语法： <em>行内式</em>和<em>参考式</em>两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个<em>行内式</em>的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>会产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</span><br><span class="line">an example&lt;/a&gt; inline link.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</span><br><span class="line">title attribute.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">See my [About](/about/) page for details.</span><br></pre></td></tr></table></figure><p><em>参考式</em>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br></pre></td></tr></table></figure><p>你也可以选择性地在两个方括号中间加上一个空格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example] [id] reference-style link.</span><br></pre></td></tr></table></figure><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[foo]: http://example.com/  &quot;Optional Title Here&quot;</span><br><span class="line">[foo]: http://example.com/  &apos;Optional Title Here&apos;</span><br><span class="line">[foo]: http://example.com/  (Optional Title Here)</span><br></pre></td></tr></table></figure><p><strong>请注意：</strong>有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用方括号包起来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/longish/path/to/resource/here</span><br><span class="line">    &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并<em>不</em>区分大小写，因此下面两个链接是一样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[link text][a]</span><br><span class="line">[link text][A]</span><br></pre></td></tr></table></figure><p><em>隐式链接标记</em>功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google][]</span><br></pre></td></tr></table></figure><p>然后定义链接内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Visit [Daring Fireball][] for more information.</span><br></pre></td></tr></table></figure><p>然后接着定义链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Daring Fireball]: http://daringfireball.net/</span><br></pre></td></tr></table></figure><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from</span><br><span class="line">[Yahoo] [2] or [MSN] [3].</span><br><span class="line"></span><br><span class="line">  [1]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [3]: http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>如果改成用链接名称的方式写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from</span><br><span class="line">[Yahoo][] or [MSN][].</span><br><span class="line"></span><br><span class="line">  [google]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>上面两种写法都会产生下面的 HTML。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;</span><br><span class="line">title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from</span><br><span class="line">&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;</span><br><span class="line">or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)</span><br><span class="line">than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or</span><br><span class="line">[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</span><br></pre></td></tr></table></figure><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code>包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br><span class="line"></span><br><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p>会转成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;em&gt;single asterisks&lt;/em&gt;</span><br><span class="line"></span><br><span class="line">&lt;em&gt;single underscores&lt;/em&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;double asterisks&lt;/strong&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;double underscores&lt;/strong&gt;</span><br></pre></td></tr></table></figure><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un*frigging*believable</span><br></pre></td></tr></table></figure><p>但是<strong>如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>Use the <code>printf()</code> function.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">会产生：</span><br></pre></td></tr></table></figure></p><p>Use the <code>printf()</code> function.</p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</span><br></pre></td></tr></table></figure><br><br><code>There is a literal backtick (`) here.</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这段语法会产生：</span><br></pre></td></tr></table></figure><br><br><p><code>There is a literal backtick (<code>) here.&lt;/code&gt;&lt;/p&gt;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</span><br></pre></td></tr></table></figure>A single backtick in a code span: `</code> <code>`</code><br><br>A backtick-delimited string in a code span: <code>`foo`</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">会产生：</span><br></pre></td></tr></table></figure><br><br><p>A single backtick in a code span: <code>`</code></p><p></p><p>A backtick-delimited string in a code span: <code><code>foo</code></code></p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在代码区段内，`&amp;` 和方括号**都**会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</span><br></pre></td></tr></table></figure></code></p><p>Please don’t use any <code>&lt;blink&gt;</code> tags.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">转为：</span><br></pre></td></tr></table></figure></p><p></p><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">你也可以这样写：</span><br></pre></td></tr></table></figure><p></p><p><code>&amp;#8212;</code> is the decimal-encoded equivalent of <code>&amp;mdash;</code>.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以产生：</span><br></pre></td></tr></table></figure></p><p></p><p><code>&amp;#8212;</code> is the decimal-encoded<br>equivalent of <code>&amp;mdash;</code>.</p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 图片</span><br><span class="line"></span><br><span class="line">很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</span><br><span class="line"></span><br><span class="line">Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： *行内式*和*参考式*。</span><br><span class="line"></span><br><span class="line">行内式的图片语法看起来像是：</span><br></pre></td></tr></table></figure><p></p><p><img src="/path/to/img.jpg" alt="Alt text"></p><p><img src="/path/to/img.jpg" alt="Alt text" title="Optional title"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">详细叙述如下：</span><br><span class="line"></span><br><span class="line">- 一个惊叹号 `!`</span><br><span class="line">- 接着一个方括号，里面放上图片的替代文字</span><br><span class="line">- 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 &apos;title&apos; 文字。</span><br><span class="line"></span><br><span class="line">参考式的图片语法则长得像这样：</span><br></pre></td></tr></table></figure></p><p><img src="url/to/image" alt="Alt text" title="Optional title attribute"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 `&lt;img&gt;` 标签。</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">## 其它</span><br><span class="line"></span><br><span class="line">### 自动链接</span><br><span class="line"></span><br><span class="line">Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</span><br></pre></td></tr></table></figure><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 会转为：</span><br></pre></td></tr></table></figure></p><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</span><br></pre></td></tr></table></figure></p><p><a href="mailto:&#97;&#x64;&#100;&#114;&#101;&#x73;&#x73;&#x40;&#x65;&#120;&#97;&#109;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#109;" target="_blank" rel="noopener">&#97;&#x64;&#100;&#114;&#101;&#x73;&#x73;&#x40;&#x65;&#120;&#97;&#109;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#109;</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 会转成：</span><br></pre></td></tr></table></figure></p><p><a href="&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;<br>&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在浏览器里面，这段字串（其实是 `&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;`）会变成一个可以点击的「address@example.com」链接。</span><br><span class="line"></span><br><span class="line">（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</span><br><span class="line"></span><br><span class="line">### 反斜杠</span><br><span class="line"></span><br><span class="line">Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 `&lt;em&gt;` 标签），你可以在星号的前面加上反斜杠：</span><br></pre></td></tr></table></figure></p><p>*literal asterisks*<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</span><br></pre></td></tr></table></figure></p><p>\   反斜线<br>`   反引号</p><ul><li>星号<br>_   底线<br>{}  花括号<br>[]  方括号<br>()  括弧<h1 id="井字号"><a href="#井字号" class="headerlink" title="井字号"></a>井字号</h1></li></ul><ul><li>加号</li></ul><ul><li>减号<br>.   英文句点<br>!   惊叹号<br><code>`</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Markdown-语法说明-简体中文版&quot;&gt;&lt;a href=&quot;#Markdown-语法说明-简体中文版&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法说明 (简体中文版)&quot;&gt;&lt;/a&gt;Markdown 语法说明 (简体中文版)&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="教程" scheme="https://myliwu.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="https://myliwu.work/tags/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Markdown" scheme="https://myliwu.work/tags/Markdown/"/>
    
      <category term="技术" scheme="https://myliwu.work/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>约瑟夫问题</title>
    <link href="https://myliwu.work/post/3d3935c8.html"/>
    <id>https://myliwu.work/post/3d3935c8.html</id>
    <published>2019-03-13T08:01:41.000Z</published>
    <updated>2019-03-13T08:03:33.639Z</updated>
    
    <content type="html"><![CDATA[<h3 id="约瑟夫（Josephus）-问题（Josephus-problem）"><a href="#约瑟夫（Josephus）-问题（Josephus-problem）" class="headerlink" title="约瑟夫（Josephus） 问题（Josephus problem）"></a>约瑟夫（Josephus） 问题（Josephus problem）</h3><ol><li>Josephus 问题（Josephus problem）是下面的游戏：N个人编号从1到N，围坐成一个圆圈。从1号开始传递一个热土豆。经过M次传递后拿着热土豆的人被清除离座，围坐的圆圈缩紧，由坐在被清除的人后面的人拿起热土豆继续进行游戏。最后剩下的人取胜。因此，如果M=0和N=5，则游戏人依序被清除，5号游戏人获胜。如果M=1和N=5，那么被清除的人的顺序是2，4，1，5。</li><li>约瑟夫环是一个数学的应用问题：已知n个人（以编号1，2，3…n分别表示）围坐在一张圆桌周围。从编号为k的人开始报数，数到m的那个人出列；他的下一个人又从1开始报数，数到m的那个人又出列；依此规律重复下去，直到圆桌周围的人全部出列。</li></ol><h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h3><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * 方法一</span><br><span class="line"> */</span><br><span class="line">public static int Josephus1(int n,int m,int k) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int i,j;</span><br><span class="line"></span><br><span class="line">LinkedList&lt;Integer&gt; L=new LinkedList&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">for ( i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">L.add(i);</span><br><span class="line">&#125;</span><br><span class="line">while (L.size()&gt;1) &#123;</span><br><span class="line">j=(int)(k+m-2)%L.size();</span><br><span class="line">L.remove(j);</span><br><span class="line">k=j+1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;剩下者编号：&quot;+L.get(0));</span><br><span class="line">return L.get(0);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 方法二</span><br><span class="line"> * @param n</span><br><span class="line"> * @param m</span><br><span class="line"> * @param k</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public static int Josephus2(int n,int m,int k) &#123;</span><br><span class="line">int i,j=0;</span><br><span class="line">for ( i = 2; i &lt;= n; i++) &#123;</span><br><span class="line">j=(j+m)%i;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;剩下者编号：&quot;+(j+k==n?n:(j+k)%n));</span><br><span class="line">return j+k==n?n:(j+k)%n;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="全部代码"><a href="#全部代码" class="headerlink" title="全部代码"></a>全部代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">package muzhi1;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.LinkedList;</span><br><span class="line">import java.util.ListIterator;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 约瑟夫环问题</span><br><span class="line"> * @author liwu</span><br><span class="line"> * @param n 总人数</span><br><span class="line"> * @param m 数到M的人移除队列</span><br><span class="line"> * @param k 开始编号（报数）人的编号</span><br><span class="line"> * </span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">public class Test4 &#123;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> * 方法一</span><br><span class="line"> */</span><br><span class="line">public static int Josephus1(int n,int m,int k) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int i,j;</span><br><span class="line"></span><br><span class="line">LinkedList&lt;Integer&gt; L=new LinkedList&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">for ( i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">L.add(i);</span><br><span class="line">&#125;</span><br><span class="line">while (L.size()&gt;1) &#123;</span><br><span class="line">j=(int)(k+m-2)%L.size();</span><br><span class="line">L.remove(j);</span><br><span class="line">k=j+1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;剩下者编号：&quot;+L.get(0));</span><br><span class="line">return L.get(0);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 方法二</span><br><span class="line"> * @param n</span><br><span class="line"> * @param m</span><br><span class="line"> * @param k</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public static int Josephus2(int n,int m,int k) &#123;</span><br><span class="line">int i,j=0;</span><br><span class="line">for ( i = 2; i &lt;= n; i++) &#123;</span><br><span class="line">j=(j+m)%i;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;剩下者编号：&quot;+(j+k==n?n:(j+k)%n));</span><br><span class="line">return j+k==n?n:(j+k)%n;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">int n=5;</span><br><span class="line">int m=1;</span><br><span class="line">int k=1;</span><br><span class="line">Josephus1(n, m,k);</span><br><span class="line">Josephus2(n, m,k);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;约瑟夫（Josephus）-问题（Josephus-problem）&quot;&gt;&lt;a href=&quot;#约瑟夫（Josephus）-问题（Josephus-problem）&quot; class=&quot;headerlink&quot; title=&quot;约瑟夫（Josephus） 问题（Josephu
      
    
    </summary>
    
      <category term="技术" scheme="https://myliwu.work/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="算法" scheme="https://myliwu.work/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="java" scheme="https://myliwu.work/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>GitHub &amp; coding + hexo博客搭建</title>
    <link href="https://myliwu.work/post/70f18d21.html"/>
    <id>https://myliwu.work/post/70f18d21.html</id>
    <published>2019-03-12T11:21:19.000Z</published>
    <updated>2019-03-12T11:55:56.950Z</updated>
    
    <content type="html"><![CDATA[<p>使用 GitHub Pages 和 Hexo 搭建免费独立博客的总结。将自己的域名访问 GitHub Pages 上的博客。同时，为了在多台电脑上都可以更新博客，采用两个分支的方式来存放文件，master 分支存放 Hexo 静态文件， 新建的source分支存放源文件。</p><h3 id="必要配置"><a href="#必要配置" class="headerlink" title="必要配置"></a>必要配置</h3><p>  在自己的 GitHub 账号下创建一个新的仓库，命名为 <a href="http://username.github.io/" target="_blank" rel="noopener">username.github.io</a>（username是你的账号名)。</p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h3 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h3><p>  当安装完 Git 应该做的第一件事情就是设置用户名称和邮件地址。这样做很重要，因为每一个 Git 的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;username@example.com&quot;</span><br></pre></td></tr></table></figure><p>  对于 user.email，因为在 GitHub 的 commits 信息上是可见的，所以如果你不想让人知道你的 email，可以 Keeping your email address private:</p><ol><li>在GitHub右上方点击你的头像，选择<code>Settings</code>；</li><li>在右边的<code>Personal settings</code>侧边栏选择<code>Emails</code>；</li><li><p>选择<code>Keep my email address private</code>。</p><p>这样，你就可以使用如下格式的 email 进行配置：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;username@users.noreply.github.com&quot;</span><br></pre></td></tr></table></figure><h3 id="Git-与-GitHub"><a href="#Git-与-GitHub" class="headerlink" title="Git 与 GitHub"></a>Git 与 GitHub</h3><h4 id="与github建立联系"><a href="#与github建立联系" class="headerlink" title="与github建立联系"></a>与github建立联系</h4><p>  为了能够在本地使用 git 管理 github 上的项目，需要进行一些配置，这里介绍 SSH 的方法。coding与GitHub类似</p><h4 id="检查电脑是否已经有-SSH-keys。"><a href="#检查电脑是否已经有-SSH-keys。" class="headerlink" title="检查电脑是否已经有 SSH keys。"></a>检查电脑是否已经有 SSH keys。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls ~/.ssh</span><br><span class="line"># Lists the files in your .ssh directory, if they exist</span><br></pre></td></tr></table></figure><p>  默认情况下，public keys 的文件名是以下的格式之一：id_dsa.pub、id_ecdsa.pub、id_ed25519.pub、id_rsa.pub。因此，如果列出的文件有 public 和 private 钥匙对（例如id_ras.pub和id_rsa），证明已存在 SSH keys。</p><h4 id="如果没有-SSH-key，则生成新的-SSH-key。"><a href="#如果没有-SSH-key，则生成新的-SSH-key。" class="headerlink" title="如果没有 SSH key，则生成新的 SSH key。"></a>如果没有 SSH key，则生成新的 SSH key。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br><span class="line"># Creates a new ssh key, using the provided email as a label</span><br></pre></td></tr></table></figure><p>  之后一路回车即可。</p><h4 id="向-ssh-agent-添加-key。"><a href="#向-ssh-agent-添加-key。" class="headerlink" title="向 ssh-agent 添加 key。"></a>向 ssh-agent 添加 key。</h4><p>  首先确保 ssh-agent 可运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># start the ssh-agent in the background</span><br><span class="line">ssh-agent -s</span><br></pre></td></tr></table></figure><p>  然后添加 SSH key：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h4 id="在-GitHub-添加-SSH-key。"><a href="#在-GitHub-添加-SSH-key。" class="headerlink" title="在 GitHub 添加 SSH key。"></a>在 GitHub 添加 SSH key。</h4><p>  首先，拷贝 key：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cat ~/.ssh/id_rsa.pub</span><br><span class="line"># Copies the contents of the id_rsa.pub file to your cllipboard</span><br></pre></td></tr></table></figure><p>  然后，在 GitHub 右上方点击头像，选择<code>Settings</code>，在右边的<code>Personal settings</code>侧边栏选择<code>SSH Keys</code>。接着粘贴 key，点击<code>Add key</code>按钮。最后，测试链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"># Attempts to ssh to GitHub</span><br></pre></td></tr></table></figure><p>  如果你看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure><p>  就键入：yes。之后将会看到如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You&apos;ve successfully authenticated, but GitHub does not</span><br><span class="line">provide shell access.</span><br></pre></td></tr></table></figure><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="搭建-hexo-博客-并创建两个分支：master-与-source"><a href="#搭建-hexo-博客-并创建两个分支：master-与-source" class="headerlink" title="搭建 hexo 博客 并创建两个分支：master 与 source"></a>搭建 hexo 博客 并创建两个分支：master 与 source</h4><h4 id="首先建立-hexo-博客"><a href="#首先建立-hexo-博客" class="headerlink" title="首先建立 hexo 博客"></a>首先建立 hexo 博客</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/Documents/Hexo</span><br><span class="line">cd ~/Documents/Hexo</span><br><span class="line">sudo npm install -g hexo-cli</span><br><span class="line">hexo init</span><br><span class="line">sudo npm install</span><br><span class="line">sudo npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><h4 id="创建-source-分支，并使其为默认分支："><a href="#创建-source-分支，并使其为默认分支：" class="headerlink" title="创建 source 分支，并使其为默认分支："></a>创建 source 分支，并使其为默认分支：</h4><p>可直接在GitHub和coding上操作，并将source设置为默认分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:username/username.github.io.git</span><br><span class="line">git add .</span><br><span class="line">#添加修改</span><br><span class="line">git commit -m &quot;init hexo&quot;</span><br><span class="line">#初次提交</span><br><span class="line">git checkout -b source</span><br><span class="line">#建立分支 hexo 并切换到分支 hexo</span><br><span class="line">git push -u origin source</span><br><span class="line">#将分支 hexo 提交到 github</span><br></pre></td></tr></table></figure><h4 id="创建-空白分支-master"><a href="#创建-空白分支-master" class="headerlink" title="创建 空白分支 master"></a>创建 空白分支 master</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br><span class="line">#退回上一级目录</span><br><span class="line">mkdir new</span><br><span class="line">#创建一个新的文件夹用以创建空白分支</span><br><span class="line">cd ~/Documents/new</span><br><span class="line">git init</span><br><span class="line">touch README.md</span><br><span class="line">#随意创建一个文件，用于提交分支</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;new branch&quot;</span><br><span class="line">git remote add origin git@github.com:username/username.github.io.git</span><br><span class="line">git push origin master</span><br><span class="line">#将分支 master 提交到 github</span><br><span class="line">rm README.md</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;clear new branch&quot;</span><br><span class="line">git push origin master</span><br><span class="line">cd ~/Documents/</span><br><span class="line">rm -rf new</span><br><span class="line">cd Hexo</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>  执行完成之后，该仓库的默认分支被设为 source，同时还有空白的 master 分支用于存放网页。</p><h4 id="设置域名"><a href="#设置域名" class="headerlink" title="设置域名"></a>设置域名</h4><p>  在 <a href="http://username.github.io/" target="_blank" rel="noopener">username.github.io</a> 仓库首页选择<code>Settings</code>，向下拉，在<code>GitHub Pages</code>部分的<code>Custom domain</code>中填上自己的域名，点击<code>save</code>保存。此操作会在 master 分支下生成一个 CNAME 文件，里面就是刚填写的域名。</p><h4 id="配置-hexo-提交方式"><a href="#配置-hexo-提交方式" class="headerlink" title="配置 hexo 提交方式"></a>配置 hexo 提交方式</h4><p>  编辑该文件夹下的<code>_config.yml</code>的<code>deploy</code>参数，分支应为 master。</p><p>默认生成的_config.yml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: http://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type:</span><br></pre></td></tr></table></figure><p>修改后的_config.yml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">-</span><br><span class="line">  type: git</span><br><span class="line">  repository:  </span><br><span class="line">    #github: git@github.com:muzhi621/muzhi621.github.io.git,master</span><br><span class="line">    coding: git@git.dev.tencent.com:muzhi621/muzhi621.git,master</span><br><span class="line">    #oschina: git@gitee.com:muzhi621/muzhi620.git</span><br><span class="line">  #branch: master</span><br></pre></td></tr></table></figure><h4 id="修改博客及部署操作"><a href="#修改博客及部署操作" class="headerlink" title="修改博客及部署操作"></a>修改博客及部署操作</h4><p>  修改博客内容后依次执行以下命令来提交网站相关的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;自定义内容即可&quot;</span><br><span class="line">git push origin source</span><br></pre></td></tr></table></figure><p>  然后执行以下任意一条生成网站并部署到 GitHub 上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate -d</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>  这样一来，在 GitHub 上的 <a href="http://username.github.io/" target="_blank" rel="noopener">username.github.io</a> 仓库就有两个分支，一个 source 分支用来存放网站的原始文件，一个 master 分支用来存放生成的静态网页。</p><h4 id="域名重置问题及解决方案"><a href="#域名重置问题及解决方案" class="headerlink" title="域名重置问题及解决方案"></a>域名重置问题及解决方案</h4><h5 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h5><p>  每次执行完<code>hexo g -d</code>之后，github 仓库设置中的 <code>Custom domain</code>总是被重置，导致域名访问出现 404 错误。</p><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><p>  在 Hexo 生成的博客的 source 目录下新建一个 CNAME 文件，里面填上自己的域名即可。</p><h4 id="博客管理流程"><a href="#博客管理流程" class="headerlink" title="博客管理流程"></a>博客管理流程</h4><p>  在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理：</p><ol><li>依次执行<code>git add .</code>、<code>git commit -m &quot;...&quot;</code>、<code>git push origin source</code>指令将改动推送到 GitHub（此时当前分支应为 source）；</li><li>然后才执行 <code>hexo g -d</code> 或 <code>hexo generate -d</code> 发布网站到 master 分支上。</li></ol><h4 id="更换电脑时："><a href="#更换电脑时：" class="headerlink" title="更换电脑时："></a>更换电脑时：</h4><ol><li>使用 <code>git clone git@github.com:username/username.github.io.git</code> 拷贝仓库（默认分支为 source）；</li><li>在本地新拷贝的<code>username.github.io</code>文件夹下通过终端依次执行下列指令：<code>sudo npm install -g hexo-cli</code>、<code>sudo npm install</code>、<code>sudo npm install hexo-deployer-git</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用 GitHub Pages 和 Hexo 搭建免费独立博客的总结。将自己的域名访问 GitHub Pages 上的博客。同时，为了在多台电脑上都可以更新博客，采用两个分支的方式来存放文件，master 分支存放 Hexo 静态文件， 新建的source分支存放源文件。&lt;
      
    
    </summary>
    
      <category term="教程" scheme="https://myliwu.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="GitHub" scheme="https://myliwu.work/tags/GitHub/"/>
    
      <category term="coding" scheme="https://myliwu.work/tags/coding/"/>
    
      <category term="hexo" scheme="https://myliwu.work/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>遗传算法</title>
    <link href="https://myliwu.work/post/9cfaa3ca.html"/>
    <id>https://myliwu.work/post/9cfaa3ca.html</id>
    <published>2019-03-12T11:15:45.000Z</published>
    <updated>2019-03-13T08:00:20.750Z</updated>
    
    <content type="html"><![CDATA[<h3 id="java遗传算法"><a href="#java遗传算法" class="headerlink" title="java遗传算法"></a>java遗传算法</h3><p>遗传算法来自仿生，高中达尔文进化论，物竞天择，适者生存，遗传算法也是如此。</p><ul><li><strong>随机生成种群</strong></li><li><strong>确定计算适应度的约束条件—&gt;自然选择用来淘汰不适应的个体</strong></li><li><strong>轮盘赌法用来选择优胜的个体</strong></li><li><strong>基因变异</strong></li><li><strong>基因交叉</strong></li><li><strong>重复以上步骤</strong></li><li><strong>知道条件终止选出最优解</strong></li></ul><hr><h3 id="例1：计算函数值"><a href="#例1：计算函数值" class="headerlink" title="例1：计算函数值"></a>例1：计算函数值</h3><p><img src="http://wx4.sinaimg.cn/mw690/00639ahCgy1g11826y7oqj31hc0sv76m.jpg" alt></p><p><img src="http://wx4.sinaimg.cn/mw690/00639ahCgy1g11829lojfj311e0h4js0.jpg" alt></p><p>代码<a href="https://download.csdn.net/download/qq_30445765/10669939" target="_blank" rel="noopener">https://download.csdn.net/download/qq_30445765/10669939</a></p><h3 id="例2：TSP问题"><a href="#例2：TSP问题" class="headerlink" title="例2：TSP问题"></a>例2：TSP问题</h3><p><img src="http://wx1.sinaimg.cn/mw690/00639ahCgy1g1182c2x2xj311e0gg0u5.jpg" alt></p><p><img src="http://wx4.sinaimg.cn/mw690/00639ahCgy1g1182efm6tj30yq0m8mxp.jpg" alt></p><p>代码<a href="https://download.csdn.net/download/qq_30445765/10669944" target="_blank" rel="noopener">https://download.csdn.net/download/qq_30445765/10669944</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;java遗传算法&quot;&gt;&lt;a href=&quot;#java遗传算法&quot; class=&quot;headerlink&quot; title=&quot;java遗传算法&quot;&gt;&lt;/a&gt;java遗传算法&lt;/h3&gt;&lt;p&gt;遗传算法来自仿生，高中达尔文进化论，物竞天择，适者生存，遗传算法也是如此。&lt;/p&gt;
&lt;ul&gt;
      
    
    </summary>
    
      <category term="技术" scheme="https://myliwu.work/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="遗传算法" scheme="https://myliwu.work/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法" scheme="https://myliwu.work/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="java" scheme="https://myliwu.work/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>什么是物联网？</title>
    <link href="https://myliwu.work/post/74de19d7.html"/>
    <id>https://myliwu.work/post/74de19d7.html</id>
    <published>2019-03-10T05:46:31.000Z</published>
    <updated>2019-03-10T06:00:50.249Z</updated>
    
    <content type="html"><![CDATA[<p>摘  要：物联网是新一代信息技术的重要组成部分，也是”信息化”时代的重要发展阶段，是信息科学技术产业的第三次革命。。其英文名称是：”Internet of things（IoT）”。顾名思义，物联网就是物物相连的互联网，万物连接一切。是基于互联网之上，使不可交流的物体与物体之间进行交流，而产生的过程，称之为物联网。起初这一慨念是由美国提出来的。把任何物品通过物联网域名相连接，进行信息交换和通信，以实现智能化识别、定位、跟踪、监控和管理的一种网络概念。即在物联网中所有的节点，包括人、物、网、实体存在、虚拟存在皆存于其网中。在中国古易经中的一句话解释恰如其分，《归藏易》以坤卦开始,象征“万物莫不归藏于其中”。 </p><p><strong>关键词：物联网；</strong>IoT<strong>；万物互联；互联网；信息化</strong></p><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h2><p>物联网（Internet of things，IoT）是基于互联网发展而来的新一代信息技术。 物联网的概念诞生于计算机、互联网之后，计算机与互联网实现了庞大网络的搭建，同时也实现了远距离的沟通，但这种沟通本质上还是停留在人与人之间。然而物联网是将射频识别、传感器等设备应用在物品，再与互联网系统结合，从而使物品自主的进行信息交换，实现物物相息，万物互联，能够较彻底得脱离人的参与，提高效率和降低成本，以实现智能化、精细化管理。 近几年，你可能听到物联网这个词的次数越来越频繁，华为、阿里、腾讯，小米等行业先锋在物联网领域的动作也越来越大，物联网究竟有何魔力引得各大互联网巨头争相进场？</p><p>根据BI Intelligence 预计到 2020 年地球上将有超过 240 亿的物联网设备， 60 亿美元将流入物联网解决方案，包括应用程序开发，设备硬件，系统集成，数据存储等。然而这些投资在 2025 年将产生 13 万亿美元的效益。由此看来物联网前景各大公司进场显而易见。物联网在中国发展已有十余年，物联网技术的成熟与产业的沉淀，加上ipv6的逐渐普及，华为5G技术上的突破，各种5G设备已经出现，中国在物联网上的话语权越来越重，物联网的需求也越来越大，市场前景越来越广阔。政府和企业在未来将成为物联网技术应用的主要消费者，除此之外，也将嵌入到人们生活的方方面面。由此也将促进各行各业对物联网的落地起积极作用。  </p><h2 id="2-物联网现状分析"><a href="#2-物联网现状分析" class="headerlink" title="2 物联网现状分析"></a>2 物联网现状分析</h2><p>Peter T. Lewis 在1985提出这个概念[求参考来源]。比尔·盖茨在1995年出版的《<a href="https://baike.baidu.com/item/%E6%9C%AA%E6%9D%A5%E4%B9%8B%E8%B7%AF" target="_blank" rel="noopener">未来之路</a>》一书中提及物互联。1998年麻省理工学院提出了当时被称作EPC系统的物联网构想。1999年，在物品编码[RFID技术上Auto-ID公司提出了物联网的概念。2005年11月17日，世界信息峰会上，国际电信联盟发布了《ITU互联网报告2005：物联网》，其中指出“物联网”时代的来临 [1] 。在中国2009年8月，温家宝总理在无锡视察时提出“感知中国”，无锡市率先建立了“感知中国”研究中心，中国科学院、运营商、多所大学在无锡建立了物联网研究院。物联网被正式列为国家五大新兴战略性产业之一，写入了十一届全国人大三次会议政府工作报告，物联网在中国受到了全社会极大的关注。2010年我国政府工作报告定义物联网:即通过信息传感设备, 按照约定的协议, 把任何物品和互联网连接起来, 进行信息交换和通讯, 以实现智能化识别、定位、跟踪、监控和管理的一种网络。</p><p>由此可见，物联网中国发展已早已上升到国家层面，极大的推进了物联网及其相关技术节点的突破与发展。物联网简单概括应包括芯片、传感器、无线传感器、网络、平台服务、系统、软件开发、智能硬件、系统集成及服务等。近年来, 随着我国物联网政策支持力度不断加大, 技术创新成果接连涌现, 各领域应用持续深化, 产业规模保持快速增长, 产业巨头纷纷制定其物联网发展战略，通过并购、合作等方式快速进行重点行业和产业链关键环节的布局，意图争夺物联网未来发展的战略导向。</p><p>面对物联网、大数据、云计算等新一轮技术革命可能带来的历史机遇, 发达国家政府纷纷出台政策进行战略布局, 投资鼓励融合创新技术的研发与应用, 以抢占全球新一轮经济科技发展的制高点。经过近几年技术与市场的培育, 物联网已进入快速发展期, 迈向了万亿美元市场, 涵盖穿戴设备、智能家居、智慧城市、物流管理、智能制造、智慧农业等众多行业领域。目前, 物联网产业的整体规模正在逐年扩大, 应用领域也在不断拓展, 产业链结构趋于完整。毫无疑问, 物联网已然成为当今世界技术创新最活跃、发展空间最广和应用潜力最大的领域之一。伴随着人工智能、边缘计算、区块链等新技术的不断兴起以及相关产业要素的完备, 物联网必将进入智能发展的新阶段。</p><h2 id="3-物联网技术与架构"><a href="#3-物联网技术与架构" class="headerlink" title="3 物联网技术与架构"></a>3 物联网技术与架构</h2><h3 id="3-1-物联网架构"><a href="#3-1-物联网架构" class="headerlink" title="3.1 物联网架构"></a>3.1 物联网架构</h3><p>物联网架构可分为三层：传感层、网络层和应用层。</p><p><img src="http://wx2.sinaimg.cn/mw690/00639ahCgy1g0xni985uuj30ro0exarr.jpg" alt></p><ol><li><p>传感层由各种传感器构成，包括温湿度传感器、二维码标签、RFID标签和读写器、摄像头、红外线、GPS等感知终端。传感层是物联网识别物体、采集信息的来源。主要是识别物体，采集信息，与人体结构中皮肤和五官的作用相似。</p></li><li><p>网络层由各种网络，包括互联网通信、互联网的融合网络、网络管理中心、信息中心和智能处理中心和云计算平台等组成，是整个物联网的中枢，负责传递和处理感知层获取的信息。网络层将感知层获取的信息进行传递和处理，类似于人体结构中的神经中枢和大脑。</p></li><li><p>应用层是物联网和用户的接口，它与行业需求结合，实现物联网的智能应用。应用层是物联网与行业专业技术的深度融合，与行业需求结合，实现行业智能化，这类似于人类社会中的每个人，按照社会分工各司其职。</p></li></ol><p>其中以智能家居为例，智能家居力图对传统家庭生活场景进行全面升级从而从根本上提升居住者的生活品质，智能家居出现的目的是满足消费者多层次的需求。</p><p><img src="http://wx2.sinaimg.cn/mw690/00639ahCgy1g0xniclkq2j30kl09vjuv.jpg" alt></p><ul><li><p>物物相联：所有家居产品都应该以有线或无线的方式形成互联，通过传感器接受各种数据，使得设备间可以实现数据信息的传输共享以及相互控制；</p></li><li><p>自动化：基于用户单次指令或日常行为特征（语音、手势）即可完成一系列相对复杂的变化操作，经过云平台数据处理后尽可能减少用户的主动控制；</p></li><li><p>可学习：基于用户的生活习惯变化进行自主学习并更新操作，使每个用户都能在习惯的场景决策下达到最好的居住体验。</p></li></ul><h3 id="1-1-物联网技术体系"><a href="#1-1-物联网技术体系" class="headerlink" title="1.1     物联网技术体系"></a>1.1     物联网技术体系</h3><p>物联网涉及感知、控制、网络通信、微电子、软件、嵌入式系统、微机电等技术领域，因此物联网涵盖的关键技术非常多，为了系统分析物联网技术体系，将物联网技术体系大概划分为感知技术、网络通信技术、应用技术。</p><ol><li>感知技术</li></ol><p>传感和识别技术是物联网感知物理世界获取信息和实现物体控制的首要环节，传感器将物理世界中的物理量、化学量、生物量转化为可供处理的数字信号，识别技术实现对物联网中物体标识和位置信息的获取。</p><ol start="2"><li>网络通信关键技术</li></ol><p>网络通信技术主要实现物联网信息和控制信息的双向传递、路由和控制，重点包括低速近距离无线通信技术、低功耗路由、异构网络融合技术以IP网络技术。</p><ol start="3"><li>应用技术</li></ol><p>海量信息智能处理综合运用高性能计算、人工智能、数据库和模糊计算等技术，对收集的感知数据进行通用处理，重点涉及数据存储、并行计算、数据挖掘、平台服务、信息呈现等，实现快速可重用的系统开发和部署。</p><h2 id="4-物联网技术挑战"><a href="#4-物联网技术挑战" class="headerlink" title="4 物联网技术挑战"></a>4 物联网技术挑战</h2><p>我们将迎来第四次产业革命，物联网、人工智能和大数据正推动人类从信息社会迈向智能社会；物联网的核心要素是互联互通的智能设备、海量传输的大数据，以及云端的人工智能，物联网由功能硬件、计算单元、传感单元、人机交互单元、通信单元、软件与内容等要素组成的系统。因此对其要求也越高：</p><ul><li><p>更加强大的信息收集、传送、计算、存储和展示能力。</p></li><li><p>更加科学、合理、高效，并不断优化的算法支持。</p></li><li><p>高质量的大数据。</p></li></ul><p>而这些问题涉及到传感、计算、存储、显示、传输等基础元器件和材料技术；计算和通信系统；软件和算法；各细分行业数据化能力；信息安全、隐私保护等法律和社会问题。</p><h3 id="4-1-物联网安全"><a href="#4-1-物联网安全" class="headerlink" title="4.1 物联网安全"></a>4.1 物联网安全</h3><p>互联网技术，把人类带入虚拟的数据世界，而物联网技术，将人们从虚拟世界带回现实。随着物联网的发展，未来的人类社会，无论生活、工作，还是商业、工业场景中，虚拟世界和现实世界之间的界限将越来越模糊，这催生了无所不在的安全问题，同样也催生了巨大的安全市场机会。到2020年，预计物联网设备的数量将超过260亿之巨。所谓量变导致质变，未来是被物联网设备包围的世界；与其同时，万物互联的安全工作也变得尤其重要。物联网链接了虚拟与现实世界，所以物联网安全不仅事关商业利益，更已经威胁到了国家公共安全和个人的财产安全。</p><p>过去的两年中，各种摄像头上传用户视频的新闻频发，勒索病毒的出现，特别是2018年，VPNFilter攻击了全球范围内的超过50万台设备，大多数设备为路由器，包括Linksys、MikroTik、Netgear、TP-Link、QNAP、华硕、D-Link、华为、Ubiquiti、UPVEL 和中兴等厂商产品无一幸免。虽然这种攻击相对较大，但它不再是罕见或一种意外。这种攻击的增加，是否意味着该行业已经习惯于物联网网络攻击？围绕物联网安全的监管，又该怎么进行下去？在我看来对于物联网安全应该关注的三个关键领域：</p><ul><li><p>软件：在安装任何新设备之前，务必确保制造商从一开始就遵守严格的软件安全措施（是否在代码中留存有后门等）而不是事后才采取的措施。其核心是能够远程修补设备，为抵御网络威胁和软件进步提供急需的未来防护。</p></li><li><p>硬件：物理安全是新物联网设备的另一个关键领域。允许用户在需要时关闭某些功能(例如，摄像头，麦克风等)。在组件中集成防篡改措施也大大减少了未经许可访问它们的机会。</p></li><li><p>网络：对于物联网设备与后端管理或存储解决方案之间的任何数据交换，加强身份验证方法也很重要，对于加密方式是否够强，是否能够使用非对称或者让区块链的技术进行认证，也保证身份的安全。</p></li></ul><h3 id="4-2-物联网机制"><a href="#4-2-物联网机制" class="headerlink" title="4.2 物联网机制"></a>4.2 物联网机制</h3><h3 id="4-2-1-安全管理机制"><a href="#4-2-1-安全管理机制" class="headerlink" title="4.2.1 安全管理机制"></a>4.2.1 安全管理机制</h3><p>对于安全问题, 一直都备受社会各界关注, 对于我们所使用的物联网设备，是否是安全的，是否可能存在一致处于被监控的状态下，对于身份的认证的容错性是否会影响人的生存状态。照此发展, 很有可能会直接造成个人隐私被侵犯。就国家角度来讲, 甚至会造成国家机密被偷窃或泄露。因此，加快国家对此相关进行立法的安全规范的出台。</p><h4 id="4-2-1-行业规划机制"><a href="#4-2-1-行业规划机制" class="headerlink" title="4.2.1 行业规划机制"></a>4.2.1 行业规划机制</h4><p>从2009年以来，物联网行业整体处于散乱的状态，物联网产业因为缺少顶层整体设计规划, 使得部门、地区、行业之间的沟通与协调不充分, 从而导致产业布局缺乏规范性、地域性、行业性互补。以及产业链各环节利益分配不够均匀等影响整个行业发展的问题需要注意。</p><h4 id="4-2-1标准协议机制"><a href="#4-2-1标准协议机制" class="headerlink" title="4.2.1标准协议机制"></a>4.2.1标准协议机制</h4><p>物联网产业缺乏顶层同意的行业标准协议与准则机制，其阻碍了产业的稳定可持续发展。因为物联网的涉及社会的各行各业，各个行业的需求存在一定的差异，导致各环节的成本的增加，从而限制了物联网的发展。</p><h2 id="5-物联网技术发展趋势"><a href="#5-物联网技术发展趋势" class="headerlink" title="5 物联网技术发展趋势"></a>5 物联网技术发展趋势</h2><p>随着信息技术的高速发展，技术节点的关键突破，新技术的兴起皆将引起整个行业的变化，正所谓风起于青萍之末。</p><h3 id="5-1-网络"><a href="#5-1-网络" class="headerlink" title="5.1 网络"></a>5.1 网络</h3><p>物联网技术以及应用的落地，物物相连的特点也催生了物联网对网络连接的多样性，网络质量的高要求的突破与发展。按照物联网的应用场景进行分类，其一低功耗广域网络，具有低功耗、低成本、大连接、广覆盖的特征, 典型应用包括智能抄表、智能停车等，主流技术为NB-IoT，LoRa等。其二可移动高实时网络，具有数据高吞吐率，强移动性，也因此对价格和功耗要求不高，主流技术5G应用网络。应用在车联网，智慧物流，远程医疗等。</p><h2 id="5-2-终端"><a href="#5-2-终端" class="headerlink" title="5.2 终端"></a>5.2 终端</h2><p>物联网技术的发展终需要终端设备的支持落地应用，也是网络互连的载体。物联网连接数成几何倍增，应用的多样化，催生物联网终端的向着多样化，高适用，具体化，小型化，智能化发展。物联网行业的整合发展，也推动物联网产品包括终端在内的的标准化，物联网全社会应用的渗透要求其具有良好的可移植性，因此对其协议的同意标准化，模块尺寸的标准化，硬件接口的标准化，进而深入到功能的标准化，并且高速的更新换代速率也需要所有物联网协议一节各种功能标准化的同时支持向下兼容。</p><h3 id="5-3-平台"><a href="#5-3-平台" class="headerlink" title="5.3 平台"></a>5.3 平台</h3><p>整个物联网中的数据处理将集中在云平台中处理，而不是存于本地，不便于信息共享与交流。物联网云平台处于物联网的中间环节，是物联网服务应终端应用交汇与支持的平台，向上与物联网应用层服务提供商连接，向下分散接入物联网感知层，汇集数据。并且随着时间的推进，物联网云平台汇集的数据越来越大，也越来越复杂，对实时性的处理需求提高。 </p><p>进入2019年，物联网热度持续不减，一个全球化的智能互联时代即将到来。那么国内的物联网平台相继推出。</p><p><strong>百度天工智能物联网平台</strong></p><p>2016年7月百度推出了名为“天工”的智能物联网平台，侧重于面向工业制造、能源、物流等行业的产业物联网。</p><p>太原铁路局使用了百度天工物联网平台高并发、高效率的数据接入，大数据对海量数据的清洗变形分析和机器学习算法进行调度优化。最终运行的效果表明，太原铁路局实现了业内实时最优物流调度，比原有调度效率提升达59%。</p><p><strong>阿里Link物联网平台</strong></p><p>2017 10月12日，阿里云在云栖大会上发布了Link物联网平台，将借助阿里云在云计算、人工智能领域的积累，将物联网打造为智联网。Link物联网平台将建设物联网云端一体化使能平台、物联网市场、ICA全球标准联盟三大基础设施，推动生活、工业、城市三大领域的智联网建设。</p><p>无锡鸿山与阿里云联合打造的首个物联网小镇，借助飞凤平台，无锡鸿山实现交通、环境、水务、能源等多个城市管理项目的在线运营，从数据采集、流转、计算到可视化展现，鸿山小镇建立起诸如污染监控、排水全链路仿真、市政设施监控等多个项目的城市运营智能化。</p><p><strong>中国电信NB-IOT</strong></p><p>2017年5月17日中国电信宣布建成全球首个覆盖最广的商用新一代物联网(NB-IoT)网络， 7月13日物联网NB-IoT(窄带物联网)在京正式商用。</p><p>中国电信同ofo、华为达成合作，推出基于NB-IoT的智能锁。它由中国电信提供NB-IoT网络，华为提供芯片和软件技术。通过使用NB-IoT网络和模块，ofo关锁截单时间将小于5秒，电池待机时间可达2年以上。</p><h3 id="5-3-新技术"><a href="#5-3-新技术" class="headerlink" title="5.3 新技术"></a>5.3 新技术</h3><h4 id="5-3-1-人工智能"><a href="#5-3-1-人工智能" class="headerlink" title="5.3.1 人工智能"></a>5.3.1 人工智能</h4><p>人工智能与机器学习在2018年获得较大发展, 几乎每个行业都在努力发掘人工智能所带来的机会。人工智能中的系统训练成果和系统推演能力也将快速进步，在中国，未来AI会更加不平凡：造芯之路艰难，核心技术突破与生态营造需要几十年的努力；科技巨头的全球成长遭遇瓶颈，外部的红利与围剿始终存在，走出困境之时遥遥无期；AI已经渗透到教育的各个阶段，“全民AI”下的机会与挑战共存。由于技术壁垒的存在，各个科技巨头正转向专业AI芯片的突破，如阿里巴巴收购中天微半导体，成立平头哥半导体，百度的昆仑AI芯片，华为的麒麟芯片等。</p><h4 id="5-3-2-边缘计算"><a href="#5-3-2-边缘计算" class="headerlink" title="5.3.2 边缘计算"></a>5.3.2 边缘计算</h4><p>随着5G、物联网、数据采集、内容采集的增加、专用AI芯片的出现和超级计算机高级处理的到来，“边缘计算”逐渐走入现实生活。继云、物联网和区块链这样的流行语出现之后，“边缘”就是下一个热词。这是计算处理的又一次飞跃。它也是分布式计算的主流技术的答案，也可以促使云真正的潜力产生。</p><p>有些资源将边缘计算与分布式计算联系起来，其中大部分或全部计算在称为智能设备的分布式设备节点上执行，但这种情况会越来越少。数据对实时决策的需求正在将AI推向靠近边缘的地方。</p><p>现在几乎所有的电子设备都可以连接到互联网，这些电子设备会后产生海量的数据。传统的云计算模型并不能及时有效的处理这些数据，在边缘结点处理这些数据将会带来极小的响应时间、减轻网络负载、保证用户数据的私密性。所以边缘计算将带来终端设备的角色转变，终端设备大部分时间都在扮演数据消费者的角色，比如使用手机观看爱奇艺、刷抖音等。</p><p>然而，现在智能手机让终端设备也有了生产数据的能力，比如在淘宝购买东西，在百度里搜索内容这些都是终端节点产生的数据。</p><p>手机就是人与云中心之间的边缘结点，网关是智能家居和云中心之间的边缘结点。在理想环境中，边缘计算指的就是在数据产生源附近分析、处理数据，没有数据的流转，进而减少网络流量和响应时间。</p><h4 id="5-3-3-区块链"><a href="#5-3-3-区块链" class="headerlink" title="5.3.3 区块链"></a>5.3.3 区块链</h4><p>在物联网发展初期的道路上，阻碍技术发展的障碍主要有以下几点：</p><ul><li><p>设备之间互联性差，连接成本高；</p></li><li><p>中心化网络达到的速度和成本难以满足更大规模物联网设备需求；</p></li><li><p>用户与用户，用户与设备，用户与网络之间难以建立基本信任，安全隐私存在隐患。</p></li></ul><p>特别是5G时代来临，物联网终端会以一个开放的方式接入物联网，传统基于内网环境的安全防护机制将会失效，安全边界不复存在。这种情况下，以区块链为代表的应用密码技术将为物联网重构安全边界，形成设备间的信任域，保证物联网安全。区块链技术可以有效解决物联网终端在碎片化情况下的协同问题，这种技术不依赖中心化的权威，也能提供可信赖、可持续的跨平台安全互联。以区块链为底层技术的物联网安全体系下，智能设备都可以获取一张“物联网护照”，实现不同品牌的互联互通。对于物联网系统中的每一个参与者，这样一个以设备为主体的物联网模式显然是极具吸引力的。</p><p>区块链仍处于早期发展阶段，其不可篡改、代码严格执行和透明共享等特点可以用于解决实体间信任问题，在传统行业、消费互联网、物联网等领域有巨大的应用潜力。</p><h2 id="6-结束语"><a href="#6-结束语" class="headerlink" title="6 结束语"></a>6 结束语</h2><p>物联网产业的发展前景非常好, 但是核心技术依旧需要进一步研发, 实现全面应用还需要一个过程。期间更需要各行各业从业者的积极探索与贡献，作为此时学生，更应好好研究，静下来学习。 </p><p><strong>参考文献</strong></p><p>[1] 赵婷婷.面向社会物联网的信息关联建模技术研究[D].南京:南京邮电大学, 2015.</p><p>[2] 杨斌, 张卫冬, 张利欣, 等.基于SOA的物联网应用基础框架[J].计算机工程, 2010, 36 (17) :95-97.</p><p>[3] “开放物联”从全局引领物联网产业发展[N]. 赵晨.  中国电子报. 2016-07-08 (006)</p><p>[4] 物联网2018年发展趋势:人工智能、安全和边缘解决方案[N]. Hannah Williams,杨勇.  计算机世界. 2018-01-22 (004)</p><p>[5] 张艳玲, 田军委, 柯成虎.嵌入式智能家居物联网网关系统设计[J].物联网技术, 2016, 6 (8) :105-107.</p><p>[6] 物联网与区块链的深度融合势在必行[N]. 徐云峰.  中华读书报. 2017-12-13 (017)</p><p>[7] Semtech. An introduction to ranging with the SX1280 transceiver[Z]. California:Semtech Corporation, 2017.</p><p>[8] 工业物联网如何破冰[N]. 麦霖杰.  通信产业报. 2017-12-18 (010)</p><p>[9] 中国信通院.中国信通院牵头推进ITU-TSG20&quot;物联网边缘计算&quot;国际标准[J].电信工程技术与标准化, 2018 (2) :92</p><p>[10] 罗松, 贾雪琴, 续合元, 等.全球物联网发展态势及我国推进建议[J].物联网学报, 2017 (1) :1-2</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;摘  要：物联网是新一代信息技术的重要组成部分，也是”信息化”时代的重要发展阶段，是信息科学技术产业的第三次革命。。其英文名称是：”Internet of things（IoT）”。顾名思义，物联网就是物物相连的互联网，万物连接一切。是基于互联网之上，使不可交流的物体与物体
      
    
    </summary>
    
      <category term="论文" scheme="https://myliwu.work/categories/%E8%AE%BA%E6%96%87/"/>
    
    
      <category term="课程" scheme="https://myliwu.work/tags/%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="物联网" scheme="https://myliwu.work/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>模式识别原理与技术</title>
    <link href="https://myliwu.work/post/7eca10d9.html"/>
    <id>https://myliwu.work/post/7eca10d9.html</id>
    <published>2019-03-06T04:54:09.000Z</published>
    <updated>2019-03-06T05:03:53.319Z</updated>
    
    <content type="html"><![CDATA[<h2 id="遗传算法综述"><a href="#遗传算法综述" class="headerlink" title="遗传算法综述"></a>遗传算法综述</h2><p>摘  要：遗传算法（Genetic Algorithms, GA）是一种基于遗传学和自然选择原理的启发搜索最优化技术方法。其核心思想来源于达尔文的进化论，“物竞天择”，“适者生存”，模仿借鉴生物进化过程机制而提出的一种启发式全局搜索算法。它常被用于找寻解决需要花费大量时间问题的最优或接近最优的解决方案，通常用于为优化问题和搜索问题生成高质量的解决方案。近年来，随着科学技术的发展遗传算法常被用在机器学习 ,图象识别 ,人工神经网络等问题上。</p><p><strong>关键词：遗传算法；自然选择；GA；进化论；启发式搜索</strong></p><h3 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h3><p>遗传算法（Genetic Algorithms, GA）来源于达尔文的进化论，达尔文进化论中的自然选择的过程是通过特点的选择因素从群体中选择最适合的个体。他们生产的后代将继承了父母的特征，并且遗传到下一代。最后，将找到最适合个体的一代。遗传算法是模拟自然选择的过程，这意味着那些能够适应环境变化的物种能够生存和繁殖并进入下一代。简单来说，他们模拟连续一代个体中的“适者生存”来解决问题。每一代都由一群个体组成，每个个体代表搜索空间中的一个点和可能的解决方案。通过遗传算法迭代后将在搜索空间中找到我们最优的个体，或者最接近我们需求的个体，一次达到解决问题的诉求。近年来，随着新型科技与思想的兴起，GA愈发得到世界上广大研究者的青睐。</p><h3 id="2-遗传算法研究现状分析"><a href="#2-遗传算法研究现状分析" class="headerlink" title="2 遗传算法研究现状分析"></a>2 遗传算法研究现状分析</h3><p>遗传算法源于进化论，虽然进化过程的计算机模拟可以追溯到20世纪50年代，但我们今天所认为的遗传算法（Genetic Algorithms，也称为“GA”）的大部分内容都是由密歇根大学教授约翰·霍兰德（John Holland）开发的，他的著作“ 适者生存”和人工系统是GA研究的先驱。今天，更多的遗传算法是更广泛的研究领域的一部分，通常被称为“进化计算”。 早在1962年，John Holland在自适应系统方面的工作为后来的发展奠定了基础; 遗传算法领域的开创性工作于1975年出版，出版了“ <em>适应自然和人工系统</em> ”一书。在荷兰本人和密歇根大学同事的早期研究和论文的基础上，本书是第一本系统地，严谨地使用变异，选择和交叉，模拟生物进化过程的自适应数字系统的概念，作为解决问题的策略。</p><p>到20世纪80年代早期到中期，遗传算法被应用于广泛的主题，从填充和图形着色等抽象数学问题到管道流量控制，模式识别和分类以及结构优化等有形工程问题。</p><p>起初，这些应用主要是理论上的。然而，随着研究的不断增加，遗传算法逐渐迁移到商业领域，它们的增长是由计算能力的指数增长和互联网的发展推动的。今天，进化计算是一个蓬勃发展的领域，在研究领域，如股票市场预测和投资组合规划，航空航天工程，微芯片设计，生物化学和分子生物学，以及机场和装配线的调度，车辆路径问题等。近年来，随着人工智能思潮的兴起，遗传算法在神经网络，图像处理，机器学习等方面亦得到广泛的使用。进化的力量几乎触及了人们所关注的任何领域，以无数种方式无形地塑造着我们周围的世界，并且随着研究的不断发展，新的用途将继续被发现。</p><h3 id="3-遗传算法思想与特点"><a href="#3-遗传算法思想与特点" class="headerlink" title="3 遗传算法思想与特点"></a>3 遗传算法思想与特点</h3><p>遗传算法通过模拟自然界生物进化的过程来达到解决问题的方法。 在GA开始前必须定义个体的适应度函数，适应度函数是一种函数，它将问题的“候选解决方案”作为输入，并产生如何“适合”解决方案对于所考虑的问题的“好”程度。</p><p>适应值的计算在GA中重复进行，因此计算速度应快，在大多数情况下，适应度函数和目标函数与目标是最大化或最小化给定目标函数是相同的。因此其适应度函数应具备以下特征 </p><p>·        适应度函数应该计算足够快。</p><p>·        它必须定量测量给定种群的拟合程度，以及从给定种群中生产个体的合适程度评价。</p><p>在我们开始研究遗传算法之前，需要花一点时间来描述达尔文进化的三个核心原则，这些原则在我们实施模拟生物进化过程中也将是必需的。为了使自然选择在自然界中发生，必须存在所有这三个必要元素。 </p><p><strong>遗传：</strong>后代必须有一个接收父母特征的程序。如果父代繁衍下一代，那么它们的特征会传递给下一代孩子。选择最适合的个体，将他们的基因传递给下一代。基于他们的适应度测评分数选择两对个体（父母），其中具有高适应性的个体有更多机会被选中进行繁殖下一代。</p><p><strong>变异：</strong>群体中必须存在各种特征，或者是引入变异的手段，其包括交叉和突变两种变异。在没有任何人口变化的情况下，子代们将永远与父母相同。新的特征组合永远不会发生，任何事物都无法发展进化。交叉是遗传算法中最重要的阶段，对于要交配的每对父母，从基因内随机选择交叉点。突变是在形成的某些新后代中，它们的一些基因可以经历具有低随机概率的突变。</p><p><strong>选择：</strong>必须有构建一种机制，通过这种机制，一些种群中只有部分后代可以遗传父代基因而存活下去，这被称为“适者生存”。自然选择的运作原则是某些特征更适合于该生物的环境，因此产生更大的生存和繁殖可能性。根据适应度比例选择是最常用的方式之一。在这个过程中，每个人都可以成为父母，其概率与其适应度成正比。因此，适应值有更高的机会将他们的特征遗传给下一代。因此，这种选择策略将选择压力应用于群体中更适合的个体，随着时间的推移发展出更好的个体。应该注意的保持人口的良好多样性对于GA的成功至关重要。</p><p><strong>终止：</strong>遗传算法的终止条件对于确定GA运行何时结束非常重要。可以观察到，最初，GA进化得非常快，每隔几次迭代就会有更好的解决方案出现，但是在改进非常小的后期阶段，这往往会达到饱和状态。我们通常需要一个终止条件，以便解决方案在运行结束时达到最优解或者接近最优。</p><p>·          当X迭代的种群中个体已经收敛没有改善时（不产生与前一代明显不同的后代）。</p><p>·          当达到绝对的世代数（定义的迭代数）。</p><p>·          当目标函数值达到某个预定义值。</p><h3 id="4-遗传算法存在的问题与挑战"><a href="#4-遗传算法存在的问题与挑战" class="headerlink" title="4 遗传算法存在的问题与挑战"></a>4 遗传算法存在的问题与挑战</h3><p>遗传算法（GA）是一种可以模拟生物进化的计算机程序。GA已被证明是一种有效且有效的解决问题的策略，但它们并非万能的。其一定的局限性;  </p><p>首先必须仔细考虑如何编写适应度函数的问题，以便可以获得更好的适应度，并且实际上等同于针对给定问题的更好解决方案。如果选择适应度函数或者不精确地定义适应度函数，遗传算法可能无法找到问题的解决方案，或者可能导致最终解决方案错误的情况出现。</p><p>其次还必须谨慎选择GA的其他参数 如种群规模，突变率和交叉率，选择的类型和强度。如果种群规模太小，遗传算法可能无法搜索足够的解空间来找到好的解决方案。如果遗传变化率过高或选择方案选择不当，有益的模式可能会被破坏，种群个体可能会进入错误的进化轨道，变化太快，无法进行选择，从而导致收敛，无法找出最优的解决方案。</p><p>GA可能出现的一个众所周知的问题被称为早熟收敛[1]。如果一个比大多数竞争对手更适合的个体在运行过程中早期出现，它可能会繁殖得太多，以至于过早降低了人口的多样性，导致算法收敛于该个体代表的局部最优值而不是彻底搜索健身景观以找到全局最优。这在小群体中是特别常见的问题，即使繁殖率的偶然变化也可能导致一种基因型变得优于其他基因型。</p><p>GA算法虽然是模拟生物进化的过程，但是不能完全模拟自然界的生物进化。</p><p>l  由于遗传算法的“特质（表现型性状）”只能是定量的，因此可以选择任何朝向目标的进化。但是自然界许多生物学特征是定性的，是无目的的，其表现形可能有用也可能无用。</p><p>l  GA只能选择非常有限的特征。自然生物界选择的特征都是无法计数的，不能完全模拟各个性状，选择必须对影响生存的所有特征进行操作。</p><p>l  在真实生物体中，突变发生在整个基因组中，而不仅仅是指定特定性状的基因或部分。这意味着必须消除对其他性状的所有有害变化，同时选择所选性状中罕见的所需变化。在GA中忽略了这一点。使用遗传算法，程序本身可以防止突变，然而，生物体的繁殖机制是不受突变的保护。</p><p>l  生物个体的性状是由多种基因共同控制的，以及一种基因可能影响多种性状，这个在GA中无法体现。</p><p>l  GA的结果是“预定义值”。而自然生物进化是无目的的。</p><h3 id="5-遗传算法未来研究方向"><a href="#5-遗传算法未来研究方向" class="headerlink" title="5 遗传算法未来研究方向"></a>5 遗传算法未来研究方向</h3><p>目前遗传算法有待突破现有桎梏。GA来源于进化论，模拟生物进化，但是却未能做到很好的模拟自然界，首先做到与自然进化的相互渗透。能够与目前起兴的机器学习，人工智能，神经网络等智能算法进行相互结合，扬长避短，推进新一代智能计算结构的构造。</p><p>其次，能都对GA算法编码方式进行改变，能够引进弥补与自然界生物DNA的趋同化，做到一种基因能够影响多种表现型性状，以及个体的一种表现型可有多种基因型决定，以此希望能够改善遗传算法的对于容易陷入局部最优解和最优解决方案的收敛速度过慢而导致的效率过低问题。</p><p>最后，当种群规模过大导致的解空间足够大时，处理的数据过多时，能够预处理删除适应度较差的冗余个体，以达到提升GA算法路径规划的速率。</p><h3 id="6-结束语"><a href="#6-结束语" class="headerlink" title="6 结束语"></a>6 结束语</h3><p>遗传算法经历几十年的长足发展，各方面已经趋于稳定，在社会的各行各业取得了广泛的应用，未来需对其进行分析改进，弥补目前遗传算法存在的问题，如能做到趋同于模拟自然界生物进化，未来GA毕将具有更为广泛的应用空间。</p><center> <b><br>     参考文献<br>    </b> </center> <p>[1] 孙增圻，邓志东，张再兴.智能控制理论与技术[M]，北京：清华大学出版社，2011：346-353.</p><p>[2] 遗传算法求解TSP的研究[D]. 喻菡.西南交通大学 2006</p><p>[3] 遗传算法与蚁群算法的改进融合[J]. 陈亚云,韩文涛,崔鹤平.  中国农机化学报. 2014(04)</p><p>[4] 多资源约束的车辆调度问题的改进遗传算法[J]. 张玉,贾遂民.  计算机工程与应用. 2016(07)</p><p>[5] J. H., Holland (1995). Hidden Order: How Adaptation Builds Complexity Addison-Wesley, Redwood City, CA..</p><p>[6] Fonseca, Carlos and Peter Fleming. “An overview of evolutionary algorithms in multiobjective optimization.” <em>Evolutionary Computation</em>, vol.3, no.1, p.1-16 (1995).</p><p>[7] Kirkpatrick, S., C.D. Gelatt and M.P. Vecchi. “Optimization by simulated annealing.” <em>Science</em>, vol.220, p.671-678 (1983).</p><p>[8] Mitchell, Melanie. <em>An Introduction to Genetic Algorithms.</em> MIT Press, 1996. Forrest 1993，p.876; Mitchell 1996，p.167</p><p>[9] Hybridizing ant colony optimization via genetic algorithm for mixed-model assembly line balancing problem with sequence dependent setup times between tasks[J] . Sener Akp?nar,G. Mirac Bayhan,Adil Baykasoglu.  Applied Soft Computing Journal . 2013 (1)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;遗传算法综述&quot;&gt;&lt;a href=&quot;#遗传算法综述&quot; class=&quot;headerlink&quot; title=&quot;遗传算法综述&quot;&gt;&lt;/a&gt;遗传算法综述&lt;/h2&gt;&lt;p&gt;摘  要：遗传算法（Genetic Algorithms, GA）是一种基于遗传学和自然选择原理的启发搜索最
      
    
    </summary>
    
      <category term="论文" scheme="https://myliwu.work/categories/%E8%AE%BA%E6%96%87/"/>
    
    
      <category term="模式识别" scheme="https://myliwu.work/tags/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB/"/>
    
      <category term="遗传算法" scheme="https://myliwu.work/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
      <category term="课程" scheme="https://myliwu.work/tags/%E8%AF%BE%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>最优化方法及其应用</title>
    <link href="https://myliwu.work/post/3b4c1ddc.html"/>
    <id>https://myliwu.work/post/3b4c1ddc.html</id>
    <published>2019-03-06T04:30:25.000Z</published>
    <updated>2019-03-10T05:52:29.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在社会生产以及日常生活中，尤其是经济活动中，通常情况下，做一个决策对策备选方案往往不止一个，则自然你希望所选方案为最佳的，而最优化方法就是从众多可能的方案中选择一个可以达到最优目标的科学，是一门新兴的数学分支。因而最优化方法和最优化理论日趋受到重视，其在社会生活生产中已经渗透到社会中方方面面，包括经济，军事，管理等领域。而伴随着计算机科学的发展，解决最优化方法的工具也日趋完善，MATLAB就是其中最具代表性的最优化工具之一。</p><h2 id="1-提出问题"><a href="#1-提出问题" class="headerlink" title="1.  提出问题"></a>1.  提出问题</h2><p>某商店拟制定某种商品 7-12月的进货，售货计划，已知商品仓库的最大容量为1500件，6月底已存货300件，年底库存不少于300件为宜，以后每个月初进货一次，假设各月份该商品买进，售出单价如下表，若每月的库存费为0.5元，问各月进货，售货各为多少件时，才能使收益最多，试建立数学模型并求解。</p><p>表1</p><table><thead><tr><th>月份</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th></tr></thead><tbody><tr><td>买进（元/件）</td><td>28</td><td>26</td><td>25</td><td>27</td><td>24</td><td>23.5</td></tr><tr><td>售出（元/件）</td><td>29</td><td>27</td><td>26</td><td>28</td><td>25</td><td>25</td></tr></tbody></table><p><strong>问题来源：</strong>AllExperiments__《数学建模实验》上机实验作业—张勇 </p><p>实验二 优化模型实验 题目3</p><p><a href="https://wenku.baidu.com/view/8f56f49dbed5b9f3f90f1cec.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/8f56f49dbed5b9f3f90f1cec.html</a></p><h2 id="2-分析问题"><a href="#2-分析问题" class="headerlink" title="2.  分析问题"></a>2.  分析问题</h2><p>此问题提出主要解决实际问题中的线性规划中的销售计划问题，在实际生产生活中经常会涉及的一个问题。为使得利润最大化，商人不得不通过合理的买进售出的规划，同时在考虑影响不可消除的成本下，通过合理的规划销售方案使得商品的销售计划达到利润的最大化。解决此类问题主要是通过分析问题，提炼出线性规划模型，然后利用MATLAB工具箱中的linprog函数解决。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MATLAB****中线性规划标准型：**</span><br><span class="line"></span><br><span class="line">Min fTx</span><br><span class="line"></span><br><span class="line">S.t. Ax&lt;=0</span><br><span class="line"></span><br><span class="line">Aeq·x=beq</span><br><span class="line"></span><br><span class="line">Lb&lt;=x&lt;=ub</span><br></pre></td></tr></table></figure><p><strong>linprog**</strong>函数：**</p><p>linprog函数主要用来求解现行规划问题，主要使用方法如下：</p><p>注意：</p><p>l  目标函数f要写成列矩阵的形式</p><p>l  约束要写成&lt;= 的形式</p><p>l  函数是为求最小值设置的</p><p>调用格式：</p><p>x=linprog(f,A,b,Aeq,beq); 求解问题min f<em>x，约束条件为A</em>x&lt;=b。</p><p>x=linprog(f,A,b,Aeq,beq,lb,ub); 求解上面的问题，但增加等式约束，即Aeq*x=beq。若没有不等式存在，则令A=[ ],b=[ ]。</p><p>x=linprog(f,A,b,Aeq,beq,lb,ub,x0); 设置初值为x0.该选项只使用于中型问题，默认时，算法将忽略初值。</p><p>x=linprog(f,A,b,Aeq,beq,lb,ub,x0,options); 用options指定的优化参数进行最小化。</p><p>[x,fval] = linprog(f,A,b,Aeq,beq,lb,ub)</p><p>[x,fval,exitflag,output，lambda]= linprog(f,A,b,Aeq,beq,lb,ub)</p><p>l  返回解x处的目标函数值fval。</p><p>l  返回exitflag值，描述函数计算的退出条件。</p><p>l  返回包含优化信息的输出变量output。</p><p>l  lambda参数是解x处的拉格朗日乘子。</p><p>其中：</p><p>Ø  x返回的是决策向量的取值；</p><p>Ø  fval返回的是目标函数的最优值;</p><p>Ø  f为价值向量（目标函数）;</p><p>Ø  A和b对应的是线性不等式约束;</p><p>Ø  Aeq和beq对应的是线性等式约束;</p><p>Ø  lb和ub分别对应决策的下界向量和上界向量;</p><p><strong>线性规划：</strong></p><p>现实问题求解最优化问题，就是在一定条件下达到利益最大化的目的。此问题集使得月利润最大，其中需考虑进货，仓储成本以及售出量所决定的利益，以此找到一个最优解使得例如能最大化。由题目问题可得，该问题属于线性规划问题，目标函数可是该商店的纯利润表达式，约束条件是现实问题中，对于利润最大化的限制，例如仓储容量，买进售出量，仓储成本。</p><p>还需考虑到问题是：</p><p>l  该商品在6-12月每个月中买进售出的价格不随时间变化。</p><p>l  每月月初计算库存费用为买进的商品量加上库存量。</p><p>l  不考虑除了仓储成本以及买进该商品的成本外其他影响最终利润的费用支出，诸如人力成本等。</p><h2 id="3-建立模型"><a href="#3-建立模型" class="headerlink" title="3.  建立模型"></a>3.  建立模型</h2><p>根据线性规划的原理和方法，结合题目具体要求，构建适合的数学模型。</p><p>(1) 确定目标函数</p><p>设7-12月每个月的该商品的买进量和售出量如下表二所示</p><p>设7-12月实际买进售出</p><p>表2</p><table><thead><tr><th>月份</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th></tr></thead><tbody><tr><td>买进</td><td>X11</td><td>X12</td><td>X13</td><td>X14</td><td>X15</td><td>X16</td></tr><tr><td>售出</td><td>X21</td><td>X22</td><td>X23</td><td>X24</td><td>X25</td><td>X26</td></tr></tbody></table><p>由题目可得，该商品6月底已存货量为300件，所以得出7-12月月初的库存量如下所示：</p><p>表3</p><table><thead><tr><th>月份</th><th>库存</th></tr></thead><tbody><tr><td>7</td><td>300+X11</td></tr><tr><td>8</td><td>300+X11-X21+X12</td></tr><tr><td>9</td><td>300+X11-X21+X12-X22+X13</td></tr><tr><td>10</td><td>300+X11-X21+X12-X22+X13-X23+X14</td></tr><tr><td>11</td><td>300+X11-X21+X12-X22+X13-X23+X14-X24+X15</td></tr><tr><td>12</td><td>300+X11-X21+X12-X22+X13-X23+X14-X24+X15-X25+X16</td></tr><tr><td>12月底</td><td>300+X11-X21+X12-X22+X13-X23+X14-X24+X15-X25+X16-X26</td></tr></tbody></table><p>为使得该商品的利润达到做大化，利润可简化为：</p><p>​     利润=销售利润-仓储成本-买进成本<br>$$<br>目标函数：</p><p>Max F=29X21-28X11+27X22-26X12+26X23-25X13+28X24-27X14+25X25-</p><p>24X15+25X26-23.5X16-0.5(300+X11+300+X11-X21+X12+300+X11-X21+X12-X22+X13+300+X11-X21+X12-X22+X13-X23+X14+300+X11-X21+X12-X22+X13-X23+X14-X24+X15+300+X11-X21+X12-X22+X13-X23+X14-X24+X15)</p><p>化简Max F’=31.5X21-31X11+29X22-28.5X12+27.5X23-27X13+</p><p>29X24-28.5X14+25.5X25-25X15+25X26-24X16-900<br>$$</p><p>(2) 确定约束条件</p><p>约束条件<br>$$<br>s.t.：</p><p>1)  商品仓库的最大容量为1500件</p><p>0&lt;=300+X11&lt;=1500</p><p>0&lt;=300+X11-X21+X12&lt;=1500</p><p>0&lt;=300+X11-X21+X12-X22+X13&lt;=1500</p><p>0&lt;=300+X11-X21+X12-X22+X13-X23+X14&lt;=1500</p><p>0&lt;=300+X11-X21+X12-X22+X13-X23+X14-X24+X15&lt;=1500</p><p>0&lt;=300+X11-X21+X12-X22+X13-X23+X14-X24+X15-X25+X16&lt;=1500</p><p>2)  年底库存不少于300件</p><p>300+X11-X21+X12-X22+X13-X23+X14-X24+X15-X25+X16-X26&gt;=300</p><p>3)  买进和售出该商品不为负</p><p>X11 X21 …… X16 X26&gt;=0<br>$$</p><p>(3) 建立线性规划模型<br>$$<br>Min C=31X11-31.5X21+28.5X12-29X22+27X13-27.5X23+</p><p>28.5X14-29X24+25X15-25.5X25+24X16-25X26+900<br>$$<br>构建解决模型：<br>$$<br>Min C’=31X11-31.5X21+28.5X12-29X22+27X13-27.5X23+</p><p>28.5X14-29X24+25X15-25.5X25+24X16-25X26</p><p>s.t.</p><p>X11&lt;=1200</p><p>-X11+X21&lt;=300</p><p>X11-X21+X12&lt;=1200</p><p>-X11+X21-X12+X22&lt;=300</p><p>X11-X21+X12-X22+X13&lt;=1200</p><p>-X11+X21-X12+X22-X13+X23&lt;=300</p><p>X11-X21+X12-X22+X13-X23+X14&lt;=1200</p><p>-X11+X21-X12+X22-X13+X23-X14+X24&lt;=300</p><p>X11-X21+X12-X22+X13-X23+X14-X24+X15&lt;=1200</p><p>-X11+X21-X12+X22-X13+X23-X14+X24-X15+X25&lt;=300</p><p>X11-X21+X12-X22+X13-X23+X14-X24+X15-X25+X16&lt;=1200</p><p>-X11+X21-X12+X22-X13+X23-X14+X24-X15+X25-X16+X26&lt;=0</p><p>-X11 -X21 …… -X16 -x26&lt;=0<br>$$</p><h2 id="4-问题求解"><a href="#4-问题求解" class="headerlink" title="4. 问题求解"></a>4. 问题求解</h2><p>采用调用工具箱法和修正单纯性函数法求解，见附录</p><p>求解可得：xm为：</p><p>$$<br>1200.00000000000</p><p>1500.00000000000</p><p>1499.99999999999</p><p>1500.00000000000</p><p>1500.00000000000</p><p>3.32426374296570e-12</p><p>5.04039389707337e-12</p><p>1500.00000000000</p><p>1500.00000000000</p><p>1499.99999999999</p><p>1500.00000000000</p><p>1200.00000000000<br>$$</p><p>$$<br>Fm=-8.549999999999593e+03</p><p>C’=fm=-8550</p><p>C=C’+900=-8550+900=-7650</p><p>利润：Max F=-C=7550<br>$$<br>所以7-12月该商品买进售出计划如下表</p><p>表4</p><table><thead><tr><th>月份</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th><th>12</th></tr></thead><tbody><tr><td>买进（件）</td><td>1200</td><td>1500</td><td>1500</td><td>0</td><td>1500</td><td>1500</td></tr><tr><td>售出（件）</td><td>1500</td><td>1500</td><td>0</td><td>1500</td><td>1500</td><td>1200</td></tr></tbody></table><p>所以该商店出售该商品最大的利润为7550元</p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5.  总结"></a>5.  总结</h2><p>学习本门最优化课程，收获颇多。在此之前，对于MATLAB这个软件从来都是只闻其名，不见其身，本以为计算机专业学生来使用MATLAB应该上手极快应是，但是结果并不是想象中的那样美好，不过当学习这软件后才发现软件的强大，可以解决许多问题，特别是对于图像图形的绘制，解决了很多感触，最优化问题归根到底还是数学问题，以前学习数学，基本是用不上的，久而久之，会产生一种数学无用论，这之后Vai发现不是数学无用，而是自己学的不够，刚开始数学基本以往，特意回去翻了翻数学书，补回来，后来同期数值分析开课，刚好相应互补，其次数学不学好，对于计算机影响也是很大的，最后老师的教诲也是受益匪浅，都说家有一老，如有一宝，老师丰富的阅历，包括我们在研究生期间对于文献的阅读等，都给出了避免我们走重复路的可能，而且上课方式也大有不同，以此讲课对于学生也是一种锻炼，一种表述能力的锻炼，但是同时学生讲的有事不够透彻，还好中间老师补种了这种缺陷。在此，对老师说声，谢谢您，也祝您此次英国之行一路顺风。</p><h2 id="6-附录"><a href="#6-附录" class="headerlink" title="6.  附录"></a>6.  附录</h2><p><strong>调用工具箱法：</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">zuiyouhua.m**</span><br><span class="line"></span><br><span class="line">f=[<span class="number">31</span>,<span class="number">-31.5</span>,<span class="number">28.5</span>,<span class="number">-29</span>,<span class="number">27</span>,<span class="number">-27.5</span>,<span class="number">28.5</span>,<span class="number">-29</span>,<span class="number">25</span>,<span class="number">-25.5</span>,<span class="number">24</span>,<span class="number">-25</span>];</span><br><span class="line"></span><br><span class="line">A=[ <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">​    ];</span><br><span class="line">b=[<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">lb=[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">[xm,fval,exitflag,output,lambda]=linprog(f,A,b,[],[],lb);</span><br></pre></td></tr></table></figure><p><strong>单纯形函数法：</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line">ModifSimpleMthd.m**</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="params">[x,minf]</span> = <span class="title">ModifSimpleMthd</span><span class="params">(A,c,b,baseVector)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">% A:约束矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% c:目标函数系数矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% b:约束右端向量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% baseVector:初始基向量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% x:目标函数取最小值时的自变量的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% minf:目标函数最小值</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">sz = <span class="built_in">size</span>(A);</span><br><span class="line"></span><br><span class="line">nVia = sz(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">n = sz(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">xx = <span class="number">1</span>:nVia;</span><br><span class="line"></span><br><span class="line">nobase = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">m = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> c&gt;=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">​    vr = <span class="built_in">find</span>(c~=<span class="number">0</span> ,<span class="number">1</span>,<span class="string">'last'</span>);</span><br><span class="line"></span><br><span class="line">​    rgv = inv(A(:,(nVia-n+<span class="number">1</span>):nVia))*b;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span> rgv &gt;=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">​        x = <span class="built_in">zeros</span>(<span class="number">1</span>,vr);</span><br><span class="line"></span><br><span class="line">​        minf = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​        <span class="built_in">disp</span>(<span class="string">'不存在最优解!'</span>);</span><br><span class="line"></span><br><span class="line">​        x = NaN;</span><br><span class="line"></span><br><span class="line">​        minf = NaN;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:nVia</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span>(<span class="built_in">isempty</span>(<span class="built_in">find</span>(baseVector == xx(<span class="built_in">i</span>),<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line">​        nobase(m) = <span class="built_in">i</span>;</span><br><span class="line"></span><br><span class="line">​        m = m + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​        </span><br><span class="line"></span><br><span class="line">​    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">bCon = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">M = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">B = A(:,baseVector);</span><br><span class="line"></span><br><span class="line">invB = inv(B);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> bCon</span><br><span class="line"></span><br><span class="line">​    nB = A(:,nobase);</span><br><span class="line"></span><br><span class="line">​    ncb = c(nobase);</span><br><span class="line"></span><br><span class="line">​    B = A(:,baseVector);</span><br><span class="line"></span><br><span class="line">​    cb = c(baseVector);</span><br><span class="line"></span><br><span class="line">​    xb = invB*b;</span><br><span class="line"></span><br><span class="line">​    f = cb*xb;</span><br><span class="line"></span><br><span class="line">​    w = cb*invB;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">​    <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(nobase)</span><br><span class="line"></span><br><span class="line">​        sigma(<span class="built_in">i</span>) = w*nB(:,<span class="built_in">i</span>)-ncb(<span class="built_in">i</span>);</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​    [maxs,ind] = <span class="built_in">max</span>(sigma);</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span> maxs &lt;= <span class="number">0</span></span><br><span class="line"></span><br><span class="line">​        minf = cb*xb;</span><br><span class="line"></span><br><span class="line">​        vr = <span class="built_in">find</span>(c~=<span class="number">0</span> ,<span class="number">1</span>,<span class="string">'last'</span>);</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">for</span> l=<span class="number">1</span>:vr</span><br><span class="line"></span><br><span class="line">​            <span class="keyword">for</span> t=<span class="number">1</span>:<span class="built_in">length</span>(baseVector)</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">if</span>(baseVector(t)==l)</span><br><span class="line"></span><br><span class="line">​                    x(l)=xb(t);</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​            <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​        bCon = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​        y = inv(B)*A(:,nobase(ind));</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">if</span> y &lt;= <span class="number">0</span></span><br><span class="line"></span><br><span class="line">​            <span class="built_in">disp</span>(<span class="string">'No solution!'</span>);</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">​            minb = <span class="built_in">inf</span>;</span><br><span class="line"></span><br><span class="line">​            chagB = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​            <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="built_in">length</span>(y)</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">if</span> y(<span class="built_in">j</span>)&gt;<span class="number">0</span></span><br><span class="line"></span><br><span class="line">​                    bz = xb(<span class="built_in">j</span>)/y(<span class="built_in">j</span>);</span><br><span class="line"></span><br><span class="line">​                    <span class="keyword">if</span> bz&lt;minb</span><br><span class="line"></span><br><span class="line">​                        minb = bz;</span><br><span class="line"></span><br><span class="line">​                        chagB = <span class="built_in">j</span>;</span><br><span class="line"></span><br><span class="line">​                    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​            <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​            tmp = baseVector(chagB);</span><br><span class="line"></span><br><span class="line">​            baseVector(chagB) = nobase(ind);</span><br><span class="line"></span><br><span class="line">​            nobase(ind) = tmp;</span><br><span class="line"></span><br><span class="line">​              </span><br><span class="line"></span><br><span class="line">​            <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:chagB<span class="number">-1</span></span><br><span class="line"></span><br><span class="line">​                <span class="keyword">if</span> y(<span class="built_in">j</span>) ~=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">​                    invB(<span class="built_in">j</span>,:) = invB(<span class="built_in">j</span>,:) - invB(chagB,:)*y(<span class="built_in">j</span>)/y(chagB);</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​            <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​            <span class="keyword">for</span> <span class="built_in">j</span>=chagB+<span class="number">1</span>:<span class="built_in">length</span>(y)</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">if</span> y(<span class="built_in">j</span>) ~=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">​                    invB(<span class="built_in">j</span>,:) = invB(<span class="built_in">j</span>,:) - invB(chagB,:)*y(<span class="built_in">j</span>)/y(chagB);</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​            <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​            invB(chagB,:) =invB(chagB,:)/y(chagB);</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">​    M = M + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span> (M == <span class="number">1000000</span>)</span><br><span class="line"></span><br><span class="line">​        <span class="built_in">disp</span>(<span class="string">'找不到最优解'</span>);</span><br><span class="line"></span><br><span class="line">​        x = NaN;</span><br><span class="line"></span><br><span class="line">​        minf = NaN;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> **main.m**</span><br><span class="line"></span><br><span class="line">c=[<span class="number">31</span>,<span class="number">-31.5</span>,<span class="number">28.5</span>,<span class="number">-29</span>,<span class="number">27</span>,<span class="number">-27.5</span>,<span class="number">29.5</span>,<span class="number">-29</span>,<span class="number">25</span>,<span class="number">-25.5</span>,<span class="number">24</span>,<span class="number">-25</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">A=[ <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span> <span class="number">-1</span> <span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span></span><br><span class="line"></span><br><span class="line">​    ];</span><br><span class="line"></span><br><span class="line">b=[<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">300</span>;<span class="number">1200</span>;<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"> [x,minf] = ModifSimpleMthd(A,c,b,[<span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">21</span> <span class="number">22</span> <span class="number">23</span> <span class="number">24</span>]);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;在社会生产以及日常生活中，尤其是经济活动中，通常情况下，做一个决策对策备选方案往往不止一个，则自然你希望所选方案为最佳的，而最优化方法就是从
      
    
    </summary>
    
      <category term="论文" scheme="https://myliwu.work/categories/%E8%AE%BA%E6%96%87/"/>
    
    
      <category term="课程" scheme="https://myliwu.work/tags/%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="最优化" scheme="https://myliwu.work/tags/%E6%9C%80%E4%BC%98%E5%8C%96/"/>
    
      <category term="matlab" scheme="https://myliwu.work/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>onedrive搭建个人云盘</title>
    <link href="https://myliwu.work/post/dbac08c7.html"/>
    <id>https://myliwu.work/post/dbac08c7.html</id>
    <published>2019-03-03T06:28:13.000Z</published>
    <updated>2019-03-06T06:24:10.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="OneDrive-OneIndex"><a href="#OneDrive-OneIndex" class="headerlink" title="OneDrive+OneIndex"></a>OneDrive+OneIndex</h2><p>OneIndex针对Onedrive网盘的一个开源程序。可以将Onedrive存储的文件展示，直连下载。<strong>视频还能在线播放</strong>！不用服务器空间，不走服务器流量！</p><h3 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h3><ul><li>不用服务器空间，不走服务器流量，</li><li>直接列OneDrive目录，文件直链下载。</li><li>HTML以及markdown图床</li><li>视频在线播放</li></ul><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>1）一台支持PHP的虚机 或 VPS 或 Docker等</p><p>2）准备一个OneDrive账号。</p><p>3）(可选)准备一个域名用于解析。</p><h3 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h3><p>OneIndex2.0是hostloc论坛大佬@<a href="http://www.hostloc.com/space-uid-18200.html" target="_blank" rel="noopener">donwa</a> 写出来的PHP程序，利用OneDrive的API接口，程序可以直接列出你的OneDrive目录，和普通的Index列表程序一样简单。它的优点？</p><ol><li>响应式，支持小屏设备</li><li>图片在线预览</li><li>视频、音频在线播放</li><li>代码在线查看（js、css、html、sh、php、java、md等）</li><li>README.md 支持，解析各目录下(onedirive目录下) README.md 文件，在页面尾部展示。HEAD.md 支持，在页面头部展示。</li><li>PHP程序安装使用简单，仅需PHP5.6+ 加Curl支持即可，甚至一个几十块钱一年的虚拟主机就行，无需任何数据库支持。</li><li>不消耗本机流量，完全无需担心流量超支。</li><li>变相支持了直链功能，你甚至可以当视频床、图床用，可以方便分享文件给你的朋友，当然不能太玩过火，官方可能会封流量过大的用户。</li></ol><p><a href="https://github.com/donwa/oneindex" target="_blank" rel="noopener">https://github.com/donwa/oneindex</a></p><h3 id="平台设置"><a href="#平台设置" class="headerlink" title="平台设置"></a>平台设置</h3><p>上传到主机目录即可，请务必给config/ 、config/base.php 、 cache/读写权限，一般为755或777。</p><p>已经内置了nginx、apache主流环境的伪静态规则，直接使用即可。</p><p>输入你的网址打开，直接会提示授权，登录你的OneDrive帐号，授权API即可。非常简单！</p><ol><li><h4 id="平台设置-1"><a href="#平台设置-1" class="headerlink" title="平台设置"></a>平台设置</h4></li></ol><p>1）访问部署的网址，第一步检查软件环境。</p><p>PHP &gt; 5.5</p><p>CURL支持</p><p>congfig 和 cache目录可读写</p><p><img src="http://wx4.sinaimg.cn/mw690/00639ahCgy1g0ppu7swxij30i908oaae.jpg" alt></p><p>2）获取应用ID 和 密钥。点击自动跳转！</p><p><img src="http://wx2.sinaimg.cn/mw690/00639ahCgy1g0ppuc6yf5j30iq0adq3g.jpg" alt></p><p>3）登陆你的OFFICE账号！</p><p><img src="http://wx1.sinaimg.cn/mw690/00639ahCgy1g0ppuh9134j30h20efjrp.jpg" alt></p><p>4）第一个显示的是密钥，复制到设置中。然后点击【知道了，返回到快速启动】</p><p><img src="http://wx2.sinaimg.cn/mw690/00639ahCgy1g0pqunjaa4j30ib082wf5.jpg" alt></p><p>5）下面显示的是应用ID，复制到设置中。</p><p><img src="http://wx2.sinaimg.cn/mw690/00639ahCgy1g0pqus2n6rj30ib08emxm.jpg" alt></p><p>6）将以上的内容全部粘贴到下面。点击【下一步】</p><p><img src="http://wx2.sinaimg.cn/mw690/00639ahCgy1g0pquwnxy9j30il0bcmxn.jpg" alt></p><p>7）点击【账号绑定】来绑定我们的OFFICE账号！</p><p><img src="http://wx4.sinaimg.cn/mw690/00639ahCgy1g0pqv0cdmej30hz059dft.jpg" alt></p><p>8）点击接受，即可完成绑定！</p><p><img src="http://wx4.sinaimg.cn/mw690/00639ahCgy1g0pqv4vsldj30e90cyt9b.jpg" alt></p><p><img src="http://wx2.sinaimg.cn/mw690/00639ahCgy1g0pqw91fdlj30cn0duaax.jpg" alt></p><p>9）点击【管理后台】可以将默认密码修改一下，然后是一些设置。</p><p><img src="http://wx3.sinaimg.cn/mw690/00639ahCgy1g0pqwdtjlcj30i106i0su.jpg" alt></p><p><img src="http://wx4.sinaimg.cn/mw690/00639ahCgy1g0pqwivxs3j30hw08baa4.jpg" alt></p><p><img src="http://wx1.sinaimg.cn/mw690/00639ahCgy1g0pqwnndl4j30iz0810sv.jpg" alt></p><h2 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h2><p>[可选]<strong>推荐配置</strong>，非必需。后台定时刷新缓存，可增加前台访问的速度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 每小时刷新一次token</span><br><span class="line">0 * * * * /具体路径/php /程序具体路径/one.php token:refresh</span><br><span class="line"></span><br><span class="line"># 每十分钟后台刷新一遍缓存</span><br><span class="line">*/10 * * * * /具体路径/php /程序具体路径/one.php cache:refresh</span><br></pre></td></tr></table></figure><h2 id="特殊文件实现功能"><a href="#特殊文件实现功能" class="headerlink" title="特殊文件实现功能"></a>特殊文件实现功能</h2><p><code>README.md</code>、<code>HEAD.md</code> 、 <code>.password</code>特殊文件使用</p><p>可以参考<a href="https://github.com/donwa/oneindex/tree/files" target="_blank" rel="noopener">https://github.com/donwa/oneindex/tree/files</a></p><p><strong>在文件夹底部添加说明:</strong></p><blockquote><p>在onedrive的文件夹中添加<code>README.md</code>文件，使用markdown语法。</p></blockquote><p><strong>在文件夹头部添加说明:</strong></p><blockquote><p>在onedrive的文件夹中添加<code>HEAD.md</code> 文件，使用markdown语法。</p></blockquote><p><strong>加密文件夹:</strong></p><blockquote><p>在onedrive的文件夹中添加<code>.password</code>文件，填入密码，密码不能为空。</p></blockquote><h2 id="命令行功能"><a href="#命令行功能" class="headerlink" title="命令行功能"></a>命令行功能</h2><p>仅能在php cli模式下运行<br> <strong>清除缓存:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php cache:clear</span><br></pre></td></tr></table></figure><p><strong>刷新缓存:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php cache:refresh</span><br></pre></td></tr></table></figure><p><strong>刷新令牌:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php token:refresh</span><br></pre></td></tr></table></figure><p><strong>上传文件:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php one.php upload:file 本地文件 [onedrive文件]</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//上传demo.zip 到onedrive 根目录  </span><br><span class="line">php one.php upload:file demo.zip  </span><br><span class="line"></span><br><span class="line">//上传demo.zip 到onedrive /test/目录  </span><br><span class="line">php one.php upload:file demo.zip /test/  </span><br><span class="line"></span><br><span class="line">//上传demo.zip 到onedrive /test/目录并命名为 d.zip</span><br><span class="line">php one.php upload:file demo.zip /test/d.zip</span><br></pre></td></tr></table></figure><h2 id="可配置项"><a href="#可配置项" class="headerlink" title="可配置项"></a>可配置项</h2><p>配置在 <code>config/base.php</code> 文件中:</p><p><strong>onedrive共享的起始目录:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;onedrive_root&apos;=&gt; &apos;&apos;, //默认为根目录</span><br></pre></td></tr></table></figure><p>如果想只共享onedrive下的 /document/share/ 目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;onedrive_root&apos;=&gt; &apos;/document/share&apos;, //最后不带 &apos;/&apos;</span><br></pre></td></tr></table></figure><p><strong>去掉链接中的 /?/ :</strong><br> 需要添加apache/nginx/iis的rewrite的配置文件<br> 参考程序根目录下的：<code>.htaccess</code>或<code>nginx.conf</code>或<code>Web.config</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//在config/base.php 中</span><br><span class="line">&apos;root_path&apos; =&gt; &apos;?&apos;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;root_path&apos; =&gt; &apos;&apos;</span><br></pre></td></tr></table></figure><blockquote><p>nginx图片404问题,参考<a href="https://github.com/donwa/oneindex/issues/14" target="_blank" rel="noopener">https://github.com/donwa/oneindex/issues/14</a></p></blockquote><p>设置nginx伪静态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    if (!-f $request_filename)&#123; </span><br><span class="line">        rewrite (.*) /index.php; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>缓存时间:</strong>   初步测试直链过期时间为一小时,默认设置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;cache_expire_time&apos; =&gt; 3600, //缓存过期时间 /秒</span><br><span class="line">&apos;cache_refresh_time&apos; =&gt; 600, //缓存刷新时间 /秒</span><br></pre></td></tr></table></figure><p>如果经常出现链接失效，可尝试缩短缓存时间,如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;cache_expire_time&apos; =&gt; 300, //缓存过期时间 /秒</span><br><span class="line">&apos;cache_refresh_time&apos; =&gt; 60, //缓存刷新时间 /秒</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;OneDrive-OneIndex&quot;&gt;&lt;a href=&quot;#OneDrive-OneIndex&quot; class=&quot;headerlink&quot; title=&quot;OneDrive+OneIndex&quot;&gt;&lt;/a&gt;OneDrive+OneIndex&lt;/h2&gt;&lt;p&gt;OneIndex针对
      
    
    </summary>
    
      <category term="教程" scheme="https://myliwu.work/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="oneIndex" scheme="https://myliwu.work/tags/oneIndex/"/>
    
  </entry>
  
  <entry>
    <title>自然辨证法</title>
    <link href="https://myliwu.work/post/2a7a6ce1.html"/>
    <id>https://myliwu.work/post/2a7a6ce1.html</id>
    <published>2019-02-27T04:38:12.000Z</published>
    <updated>2019-03-12T11:54:45.250Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自然辩证法"><a href="#自然辩证法" class="headerlink" title="自然辩证法"></a>自然辩证法</h3><ol><li><p><strong>从各自所学的专业来谈谈为什么要学习自然辩证法，你是如何理解自然辩证法的？其对你的科学研究有何帮助？其意义是什么？</strong></p><p>自然辩证法是研究自然界和科学技术发展一般规律、人类认识自然和改造自然一般方法、以及科学技术在社会发展中的作用的科学，是关于自然界和自然科学发展的普遍规律的科学。</p><p>研究生学习与本科大有不同，研究生更注重理论与实践的结合，具备独立法人科研能力，创新精神和科学素养，学习自然辩证法，提高理论思维能力和逻辑思维能力以及从多角度考虑问题的能力，有助于掌握辩证唯物主义自然观及科学的认识论和方法论。坚持实事求是、敢于挑战、合理质疑的能力和严于律己的品格，有助于认识到弄虚作假、抄袭剽窃等行为不能证明科研能力，只是自欺欺人。</p><p>计算机科学与自然辩证法有着紧密的联系。自然辩证法讲究“一体两面”：从道家的“阴阳太极学说”；马列的唯物辩证法；而计算机建立理论与此不谋而合；，都是由二进制0和1组成。算机本身是一个矛盾的对立统一体，人们往往希望计算机能以最快的速度，以最少的时间完成给定的任务；又往往希望以有限的存储空间处理尽可能多的数据。计算机的运行需要时间，所运行的程序和处理的数据需要存储空间。</p><p>机器能不能思维,目前研究人工智能目的是让机器和人一样思维,自然辩证法人工智能的研究方向就具有有指导意义。以自然辩证法的观点来分析计算机科学,有助于我们更加深入地了解其现状,预见其发展趋势,总结过去、把握现在、放眼未来,正确地选择计算机科学发展的方向,更好的学习、利用和发展计算机科学。</p></li><li><p><strong>在近代自然学科产生阶段，人类在自然观和方法论方面有什么局限性？为什么会造成这种情况？</strong></p><p>近代自然科学产生时间阶段处了十七世纪至十八世纪，是近代自然科学发展的初级阶段，由于伽利略、牛顿等人的工作，力学领域发生了天翻地覆的变化，取得了极其显著的进步。但是限于当时社会发展以及科学水平的限制导致在自然观和方法论上的人都是具有局限性。</p><p>自然观局限性：</p><p>1）机械自然观认为物质吃的运动是位置的不断变化；</p><p>2）把一切质的差异都归结为量的差异</p><p>3）机械自然观是以孤立的，静止的方法研究自然界；</p><p>4）在自然科学上没有突破神学的桎梏；</p><p>5）影响了经济学，受其支配下的人类活动造成了生态环境的恶化。</p><p>原因：</p><p>1)  只是把运动看做是机械的运动，用机械运动的特点掩盖了其他运动形式的特殊性。</p><p>2)  否定了质自身和不同层次的量的规定性，认为事物的量的变化将一切质的差别和变化归结起来，否定了质的存在；</p><p>3）机械自然观用静止的观点来解释自然界，用孤立的观点来否定事物之间联系的普遍性；</p><p>4）机械唯物主义自然观虽然在一定程度上拜托了中世纪神学的束缚，但是神学又因“神的第一推动力”而存在。</p><p>5）机械唯物主义自然观认为人与自然是对立的，二者独立存在而不相互依存，这种观点造成了自然与人的对立，以及人们对自然伦理的冷漠，使得人们的自然观发生了异化。</p><p>方法论局限性和原因：</p><p>科学家采用试验方法研究自然，撇开了广泛联系，认为世界静止不动，形成形而上学方法论</p><p>1）有些真理并不能从起始的自明之理中直接演绎出来；</p><p>2）直观并不能毫无遗漏地看清事物的序列中的一切环节；</p><p>3）即使较简单事物序列的一切环节有可能全部看清，我们的记忆在这个思维运动终结时也往往不再可能恢复经历过的全部过程了。</p></li><li><p><strong>我们说，”科学问题是一定历史时代的产物“。对此您是如何认识的？是否现实中还没有解决的矛盾都可以构成科学问题？</strong></p><p>理解：科学问题本身具有历史性，时代所提供的知识背景决定着科学问题的内涵深度和解答途径。同一问题,在不同的事实和经验元素下,具有不同的性质和内容，而随着一定时代的知识背景的不同，非科学问题可以转化为科学问题。任何科学问题都是具体的，不同的时代、不同的知识背景下，有不同的内涵。在科学发展中，问题是科学认识，探索的起点，为科学提供精神动力，也是科学发展的内在动力，新科学，新知识的生长点，由于问题具有特定时间内特有的功能，所以关于问题的研究从未停止过。</p><p>现实中还没有解决的矛盾不一定能构成科学问题。因为科学研究总是在特定时代的知识背景下进行的，这就导致科学问题的产生常常表现出明显的时代特征。著名数学家希尔伯特之所以能够提出对当代数学产生重大影响的23个数学问题，就在于他对当时数学的发展有一个全局的把握。同一问题，在不同的知识背景下，其内涵深度也是不一样的。</p><p>其次，科学问题并不是漫无边际的问题，而应包含着一定的研究方向和求解目标。不过这种指向仅仅是大致的，即大致的指出问题之所在、研究应朝哪里进行、研究应该或可能取得什么样的后果。而应答域则是对答案范围的限定。科学问题作为一种特殊的知识形态，它提供的知识不仅表现在探索的对象，而且表现在提示答案的范围。</p></li><li><p><strong>如何构建技术与自然，技术与社会，技术应用中人与人，人与工具设备之间的和谐关系？</strong></p><p>技术，一般指根据生产实践经验和自然科学原理而发展成的各种工艺方法和技能。</p><p>科学技术与自然并不矛盾，而是有机统一的，科学技术的发展依赖于自然环境，同时又有利于自然环境的改善，自然环境的改善促进了科学技术的发展。人类的科学实践活动，同自然环境不可避免地存在着矛盾。人类必须认识环境，必须遵循环境的发展变化规律，协调人类、科学技术与环境三者之间的和谐关系。</p><p>科学技术的发展对于人类社会具有双重影响，科学技术给社会带来一系列便利的同时也导致过度发展所带来的人的主体地位的丧失、生存环境的恶化等许多严峻问题。因此，我们应当赋予科技人道主义精神，防止科技和人的异化，科学的重大发现往往导致旧的道德规范及其价值体系的解体，形成新的道德观念，并从而塑造新的社会价值体系。 </p><p>在技术应用中，人与人之间往往存在利益关系矛盾；利用技术的应用达到自己的利益诉求，这个过程中往往伴随着侵犯他人利益，而科学技术应用只有在一定的伦理规则约束下才能造福人类, 科技伦理是人类正确与正当运用科技的准则，而一个和谐的社会是“以人为本”的社会，利用构建的科技伦理有效调控技术应用人与人的关系，规范人类运用科学技术维护自身生存的活动，使人与人之间的关系和谐。</p><p>工具理性强调的是效率和收益的最大化，并不重视人与人之间关系的和谐。甚至由于工具理性推崇的效率挤压了人的自由空间。因此面对人与工具冲突所带来的负面作用，因对之加以平衡和限制。抵消工具理性的消极影响，限制工具理性的作用范围，将之控制在生产和交换活动的某些领域之内，而不至任之弥漫到社会生活的全部领域。</p></li><li><p><strong>有人认为，只要技术掌握在好人手中，技术的负面后果就可以消除，你如何理解为的？我们应该如何看待技术发展过程中的伦理问题 ？</strong></p><p>不同意，首先，我们无法定义人的好坏，孰好孰坏，在不同的角度辩证看来，结果会有不同，为什么不管科技掌握在谁的手上，技术的负面后果都不能消除，只能尽力避免。辩证的看待和使用科学技术。科学技术是把“双刃剑”，既可给人类带来积极的影响又可给人类带来负面的影响。然而，科学技术本身无所谓好与坏，它是中性的，要想让科学技术是造福人类还是祸害人类归根到底还得取决于人类自己。</p><p>1）技术的负面效果是人类过分依赖技术造成种种精神困惑和异化问题。</p><p>2）科学技术自身的缺陷。</p><p>3）现实利益的需要，现实利益的驱使，使科学技术的消极作用在现实世界频频出现，是人对科学技术的价值选择问题。</p><p>4）人类认识水平的限制。由于人类这种认识的局限性，导致了盲目滥用科学技术，最终给人类带来了无法估量的损失和代价。</p><p>随着科技在日常生活中越来越重要，同时也使得在道德责任的分配问题上更加复杂化。科学技术在人与社会、伦理道德方面产生的负面影响对我们整个社会的发展造成了不利的影响，我们需要反思造成这些不利影响的原因是什么并克服之，从而更加有利于充分发挥科学技术的正面影响，从而造福人类社会。对科学技术的发明者和应用者进行科学技术伦理道德的教育，提高自身素质，尽量减少科学技术负面影响，从而使科学技术更好的造福人类。明确了他们作为社会中的一员所应承担的社会责任和义务，从而更加有利于避免科学技术带来的负面影响。</p></li></ol><p>​                                                                                                                           李武</p><p>​                                                                                                                      2018.10.21</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;自然辩证法&quot;&gt;&lt;a href=&quot;#自然辩证法&quot; class=&quot;headerlink&quot; title=&quot;自然辩证法&quot;&gt;&lt;/a&gt;自然辩证法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;从各自所学的专业来谈谈为什么要学习自然辩证法，你是如何理解自然辩证法的？其对你的科
      
    
    </summary>
    
      <category term="课程" scheme="https://myliwu.work/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    
      <category term="课程" scheme="https://myliwu.work/tags/%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="哲学" scheme="https://myliwu.work/tags/%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
</feed>
